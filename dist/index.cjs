var e=require("@bsvwasm/mnemonic"),r=require("bitcoin-bap"),t=require("bitcore-mnemonic"),n=require("body-parser"),o=require("bsv-wasm"),s=require("connect-timeout"),a=require("cors"),i=require("crypto"),c=require("express"),u=require("fs"),l=require("nedb"),d=require("path"),f=require("url"),h=require("bitcore-lib"),p=require("buffer");function m(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function g(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach(function(t){if("default"!==t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}}),r.default=e,r}var v=/*#__PURE__*/m(t),y=/*#__PURE__*/m(n),b=/*#__PURE__*/m(s),w=/*#__PURE__*/m(a),k=/*#__PURE__*/m(i),P=/*#__PURE__*/m(c),S=/*#__PURE__*/m(u),T=/*#__PURE__*/m(l),j=/*#__PURE__*/m(d),O=/*#__PURE__*/m(h),x=/*#__PURE__*/m(p);function A(){return A=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},A.apply(this,arguments)}var E=/*#__PURE__*/function(){function e(e){this.db=new e.Datastore({filename:e.db+"/keys.db",autoload:!0}),this.wallet=e.wallet,this.config=e}var r=e.prototype;return r.setSeed=function(e){this.seed=e},r.getSeed=function(){return this.seed},r.sign=function(e){return this.wallet.sign(e.message,e.key,e.encoding)},r.encrypt=function(e){return this.wallet.encrypt(e.message,e.key)},r.findOrCreate=function(e){try{var r=this;return Promise.resolve(r.findOne(e)).then(function(t){var n,o=function(){if(!t)return Promise.resolve(r.count({})).then(function(o){return r.seed?Promise.resolve(r.wallet.create(r.seed,o,e)).then(function(e){return t=e,Promise.resolve(r.insert(t)).then(function(e){t=e})}):(console.log("Please go to http://localhost:21000 and create a wallet"),n=1,null)})}();return o&&o.then?o.then(function(e){return n?e:t}):n?o:t})}catch(e){return Promise.reject(e)}},r.findOne=function(e){var r=this;return new Promise(function(t,n){r.db.findOne(e,function(e,n){t(n?r.transform(n):null)})})},r.find=function(e){var r=this;return new Promise(function(t,n){r.db.find(e,function(e,n){t(n.map(function(e){return r.transform(e)}))})})},r.count=function(e){var r=this;return new Promise(function(t,n){r.db.count(e,function(e,r){t(r)})})},r.insert=function(e){var r=this;return new Promise(function(t,n){r.db.insert(e,function(n,o){t(r.transform(e))})})},r.transform=function(e){var r=this.wallet.derive(this.seed,e.path);return e.priv=r.privateKey.toString(),e.pub=r.publicKey.toString(),e.address=r.publicKey.toAddress().toString(),e},r.all=function(){var e=this;return new Promise(function(r,t){e.db.find({},function(t,n){r(n.map(function(r){return e.transform(r)}))})})},e}();function _(e,r,t){var n=k.default.randomBytes(16);t||(t=k.default.createHash("sha256").update(r).digest());var o=k.default.createCipheriv("aes-256-cbc",t,n),s=o.update(e);return s=Buffer.concat([s,o.final()]),{iv:n.toString("hex"),encryptedData:s.toString("hex")}}var K=/*#__PURE__*/function(){function e(e){this.db=new e.Datastore({filename:e.db+"/seed.db",autoload:!0}),this.wallet=e.wallet}var r=e.prototype;return r.get=function(e){var r=this;return new Promise(function(t,n){r.db.findOne({},function(n,o){if(o)try{var s=function(e,r,t){var n=Buffer.from(e.iv,"hex");t||(t=k.default.createHash("sha256").update(r).digest());var o=Buffer.from(e.encryptedData,"hex"),s=k.default.createDecipheriv("aes-256-cbc",t,n),a=s.update(o);return(a=Buffer.concat([a,s.final()])).toString()}(o.hex,e),a=r.wallet.seed(s);t(a)}catch(e){t(null)}else t(null)})})},r.importKey=function(e,r){var t=this;return new Promise(function(n,o){try{var s=t.wallet.seed(e);t.db.insert({hex:_(s.hex,r)},function(e,r){n(s)})}catch(e){o(e)}})},r.exportKey=function(e){try{return Promise.resolve(this.get(e)).then(function(e){return e.hex})}catch(e){return Promise.reject(e)}},r.count=function(){var e=this;return new Promise(function(r,t){e.db.count({},function(e,t){r(t)})})},r.create=function(e){var r=this;return new Promise(function(t,n){var o=r.wallet.seed(void 0,e);r.db.insert({hex:_(o.hex,e)},function(e,r){t(o)})})},e}(),q=/*#__PURE__*/function(){function e(e){this.db=new e.Datastore({filename:e.db+"/state.db",autoload:!0})}var r=e.prototype;return r.setState=function(e){this.state=e},r.getState=function(){return this.state},r.findOrCreate=function(e){try{var r=this;return Promise.resolve(r.findOne({host:e.host})).then(function(t){var n=function(){if(!t)return Promise.resolve(r.insert(e)).then(function(e){t=e})}();return n&&n.then?n.then(function(){return t}):t})}catch(e){return Promise.reject(e)}},r.findOne=function(e){var r=this;return new Promise(function(t,n){r.db.findOne(e,function(e,r){r?(delete r._id,t(r)):t(null)})})},r.find=function(e){var r=this;return new Promise(function(t,n){r.db.find(e,function(e,r){t(r)})})},r.delete=function(e){var r=this;return new Promise(function(t,n){r.db.remove(e,function(e,r){t(r)})})},r.count=function(e){var r=this;return new Promise(function(t,n){r.db.count(e,function(e,r){t(r)})})},r.insert=function(e){var r=this;return new Promise(function(t,n){r.db.insert(e,function(n,o){r.setState(e),t(e)})})},r.update=function(e){var r=this;return new Promise(function(t,n){r.db.update({host:e.host},{$set:e},{upsert:!0,returnUpdatedDocs:!0},function(e,n,o){console.log("UPDATED",{err:e,accessToken:o.accessToken}),r.setState(o),t(o)})})},r.all=function(){var e=this;return new Promise(function(r,t){e.db.find({},function(e,t){r(t)})})},e}(),N="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function R(e){var r={exports:{}};return e(r,r.exports),r.exports}var z=R(function(e,r){var t=x.default.Buffer;function n(e,r){for(var t in e)r[t]=e[t]}function o(e,r,n){return t(e,r,n)}t.from&&t.alloc&&t.allocUnsafe&&t.allocUnsafeSlow?e.exports=x.default:(n(x.default,r),r.Buffer=o),o.prototype=Object.create(t.prototype),n(t,o),o.from=function(e,r,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return t(e,r,n)},o.alloc=function(e,r,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var o=t(e);return void 0!==r?"string"==typeof n?o.fill(r,n):o.fill(r):o.fill(0),o},o.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return t(e)},o.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return x.default.SlowBuffer(e)}}),U=R(function(e){var r=65536,t=z.Buffer,n=N.crypto||N.msCrypto;e.exports=n&&n.getRandomValues?function(e,o){if(e>4294967295)throw new RangeError("requested too many random bytes");var s=t.allocUnsafe(e);if(e>0)if(e>r)for(var a=0;a<e;a+=r)n.getRandomValues(s.slice(a,a+r));else n.getRandomValues(s);return"function"==typeof o?process.nextTick(function(){o(null,s)}):s}:function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}}),B=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];function H(e){return e.toString("hex").match(/.{2}/g).map(function(e){return parseInt(e,16).toString(2).padStart(8,"0")}).join("")}var L=O.default.deps._,D=O.default.PrivateKey,C=O.default.PublicKey,I=O.default.Address,M=O.default.encoding.BufferWriter,F=O.default.crypto.ECDSA,G=O.default.crypto.Signature,W=O.default.crypto.Hash.sha256sha256,J=O.default.util.js,V=O.default.util.preconditions,Y=function e(r,t){return void 0===t&&(t="utf8"),this instanceof e?(V.checkArgument(L.isString(r),"First argument should be a string. You can specify the encoding as the second parameter"),V.checkArgument(["ascii","utf8","utf16le","ucs2","base64","latin1","binary","hex"].includes(t),"Second argument should be a valid BufferEncoding: 'utf8', 'hex', or 'base64', etc"),this.message=r,this.encoding=t,this):new e(r,t)};Y.MAGIC_BYTES=Buffer.from("Bitcoin Signed Message:\n"),Y.prototype.magicHash=function(){var e=M.varintBufNum(Y.MAGIC_BYTES.length),r=Buffer.from(this.message,this.encoding),t=M.varintBufNum(r.length),n=Buffer.concat([e,Y.MAGIC_BYTES,t,r]);return W(n)},Y.prototype._sign=function(e){V.checkArgument(e instanceof D,"First argument should be an instance of PrivateKey");var r=this.magicHash(),t=new F;return t.hashbuf=r,t.privkey=e,t.pubkey=e.toPublicKey(),t.signRandomK(),t.calci(),t.sig},Y.prototype.sign=function(e){var r=e.toWIF();return e=D.fromWIF(r),this._sign(e).toCompact().toString("base64")},Y.prototype._verify=function(e,r){V.checkArgument(e instanceof C,"First argument should be an instance of PublicKey"),V.checkArgument(r instanceof G,"Second argument should be an instance of Signature");var t=this.magicHash(),n=F.verify(t,r,e);return n||(this.error="The signature was invalid"),n},Y.prototype.verify=function(e,r){V.checkArgument(e),V.checkArgument(r&&L.isString(r)),L.isString(e)&&(e=I.fromString(e));var t=G.fromCompact(Buffer.from(r,"base64")),n=new F;n.hashbuf=this.magicHash(),n.sig=t;var o=n.toPublicKey(),s=I.fromPublicKey(o,e.network);return e.toString()!==s.toString()?(this.error="The signature did not match the message digest",!1):this._verify(o,t)},Y.fromString=function(e){return new Y(e)},Y.fromJSON=function(e){return J.isValidJSON(e)&&(e=JSON.parse(e)),new Y(e.message)},Y.prototype.toObject=function(){return{message:this.message,encoding:this.encoding}},Y.prototype.toJSON=function(){return JSON.stringify(this.toObject())},Y.prototype.toString=function(){return this.message},Y.prototype.inspect=function(){return"<Message: "+this.toString()+">"},delete global._bitcore;var $=function(e,r,t){var n=O.default.PrivateKey.fromWIF(r.priv),o=Y(e,t);return{address:r.address,message:e,sig:o.sign(n),ts:Date.now()}},Q={__proto__:null,sign:$,encrypt:function(e,r){var t=_(e,null,O.default.PrivateKey.fromWIF(r.priv).toBuffer());return{address:r.address,data:t,ts:Date.now()}},create:function(e,r,t){try{var n="m/44'/0'/"+r+"'/2/0",o=e.key.deriveChild(n),s=o.privateKey.toAddress().toString(),a={path:n,pub:o.publicKey.toString(),address:s,host:t.host};return Promise.resolve(a)}catch(e){return Promise.reject(e)}},seed:function(r,t){var n;if(r)n=Buffer.from(r,"hex");else{if(!t)throw new Error("passphrase required creting initial seed");var s=function(r){for(var t=H(r),n=o.Hash.sha_256(r).to_bytes(),s=t+H(Buffer.from(n)).substring(0,8*r.length/32),a=[],i=0;i<s.length;i+=11){var c=parseInt(s.slice(i,i+11),2);a.push(B[c])}return new e.MnemonicEN(a.join(" "))}(U(16));s.setPassphrase(t),n=Buffer.from(s.toBytes())}try{var a=O.default.HDPrivateKey.fromSeed(n);return{hex:n.toString("hex"),key:a}}catch(e){throw e}},derive:function(e,r){return e.key.deriveChild(r)},verify:function(e,r,t,n){return Y(e,n).verify(r,t)}};function X(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}var Z=f.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.cjs",document.baseURI).href),ee=d.dirname(Z),re=P.default(),te=["http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")],ne=process.env.TOKENPASS_ORIGIN_WHITELIST;ne&&te.push.apply(te,ne.split(","));var oe=function(e){return e.origin?new URL(e.origin).host:null};exports.init=function(t){var n=t.db;S.default.existsSync(n)||S.default.mkdirSync(n,{recursive:!0});var s=new K({db:n,wallet:Q,Datastore:T.default}),a=new E({db:n,wallet:Q,Datastore:T.default}),c=new q({db:n,Datastore:T.default});re.set("views",j.default.join(ee,"views")),re.set("view engine","ejs"),re.use(b.default("20s")),re.use(y.default.json({limit:"50mb"})),re.use(y.default.raw({type:"application/octet-stream",limit:"50mb"})),re.use(y.default.urlencoded({limit:"50mb",extended:!0})),re.use(P.default.static(j.default.join(ee,"public"))),re.options("*",w.default()),re.use(P.default.urlencoded({extended:!1})),re.post("/sign",w.default(),function(e,r){try{console.log("SIGN ATTEMPTED FROM",e.headers.origin,{message:e.body.message,authToken:e.headers.authorization});var t=e.body.message,n=e.body.encoding||"utf8";return Promise.resolve(function(){if(a.getSeed()){var o=e.headers.authorization;return void 0===o|null===o?void r.status(401).json({error:"Please provide an access token in the Authorization header.",code:2,success:!1,errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth"}):Promise.resolve(c.findOne({accessToken:o})).then(function(s){if(null!=s&&s.accessToken&&s.accessToken===o){var i=o?s.host:oe(e.headers);i||(i=process.env.TOKENPASS_HOST||"localhost",console.log("no origin, using",i));var c=s.expireTime&&s.expireTime<Date.now();if(console.log("SIGN:",{expireTime:s.expireTime,now:Date.now(),host:i}),!c)return Promise.resolve(a.findOrCreate({host:i})).then(function(e){if(e)return Promise.resolve(a.sign({message:t,key:e,encoding:n,ts:Date.now()})).then(function(e){r.status(200).json(e)});r.status(417).json({error:"please create a wallet.",success:!1})});r.status(401).json({error:"Access token has expired.",errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth",code:5})}else r.status(401).json({error:"Invalid access token.",errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth",code:3,success:!1})})}r.status(401).json({errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth",error:"Check that TokenPass is running and you're signed in.",code:1})}())}catch(e){return Promise.reject(e)}}),re.post("/encrypt",w.default(),function(e,r){try{var t=e.body.message;return Promise.resolve(function(){if(a.getSeed()){var n=e.headers.authorization;return void 0===n|null===n?void r.status(401).json({error:"Please provide an access token in the Authorization header.",code:2,success:!1,errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth"}):(oe(e.headers),Promise.resolve(c.findOne({accessToken:n})).then(function(e){if(e)return Promise.resolve(a.findOrCreate({host:e.host})).then(function(e){if(e){var n=a.encrypt({message:t,key:e}),o=n.address,s=n.data,i=n.sig,c=n.ts;console.log({address:o,data:s,sig:i,ts:c}),r.status(200).json({data:s,address:o,sig:i,ts:c})}else r.status(417).json({error:"please create a wallet."})});r.status(401).json({error:"Invalid access token.",errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth",code:3,success:!1})}))}r.status(401).json({errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth",error:"Check that TokenPass is running and you're signed in.",code:1})}())}catch(e){return Promise.reject(e)}}),re.post("/register",function(e,t){try{return Promise.resolve(s.create(e.body.password)).then(function(n){var s=o.ExtendedPrivateKey.from_seed(Buffer.from(n.hex,"hex")),i=new r.BAP(s.to_string()).newId();return a.setSeed(n),Promise.resolve(c.findOrCreate({host:process.env.TOKENPASS_HOST||"localhost"})).then(function(r){return r.icon||(r.icon="/auth/icon"),Promise.resolve(c.update(r)).then(function(){return Promise.resolve(c.findOrCreate({host:"global"})).then(function(r){return i.setAttribute("displayName",e.body.displayName),i.setAttribute("paymail",e.body.paymail),i.setAttribute("logo",e.body.logo),r=A({},r,Object.keys(i.identityAttributes).reduce(function(e,r){return e[r]=i.identityAttributes[r].value,e},{}),{bapID:i.identityKey}),Promise.resolve(c.update(r)).then(function(){t.json({})})})})})})}catch(e){return Promise.reject(e)}}),re.post("/import",w.default(),function(r,t){try{var n=X(function(){var n=new e.MnemonicEN(r.body.mnemonic);return Promise.resolve(s.importKey(n.toHex(),r.body.password)).then(function(e){a.setSeed(e),t.json({})})},function(){t.json({error:"invalid seed",success:!1})});return Promise.resolve(n&&n.then?n.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),re.post("/export",function(e,t){try{var n=X(function(){return Promise.resolve(s.exportKey(e.body.password)).then(function(e){var n=o.ExtendedPrivateKey.from_seed(Buffer.from(e,"hex")),s=(new r.BAP(n.to_string()),v.default.fromSeed(Buffer.from(e,"hex"),v.default.Words.ENGLISH));s?t.json({seed:e,mnemonic:s.phrase}):t.status(401).json({error:"invalid",success:!1,errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth"})})},function(e){console.error(e),t.status(500).json({error:"unknown error",success:!1})});return Promise.resolve(n&&n.then?n.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),re.post("/state",w.default(),function(e,r){try{var t=new URL(e.headers.origin).host;return Promise.resolve(c.findOne({host:t})).then(function(n){function o(){r.json({success:!0})}var s=function(){if(n){var r=function(){if("clear"===e.query.mode)return Promise.resolve(c.delete({host:t})).then(function(){return Promise.resolve(c.update(A({},e.body,{host:t}))).then(function(){})});c.update(A({},e.body,{host:t}))}();if(r&&r.then)return r.then(function(){})}else c.insert(A({},e.body,{host:t}))}();return s&&s.then?s.then(o):o()})}catch(e){return Promise.reject(e)}}),re.post("/profile",w.default(),function(e,r){try{var t=function(){if(a.getSeed()){var t="global",n=X(function(){return Promise.resolve(c.findOne({host:t})).then(function(n){function o(){r.json({success:!0})}var s=A({},e.body,{host:t}),a=function(){if(n){var r=function(){c.update(s)},o=function(){if("clear"===e.query.mode)return Promise.resolve(c.delete({host:t})).then(function(){})}();return o&&o.then?o.then(r):r()}c.insert(s)}();return a&&a.then?a.then(o):o()})},function(e){console.error(e),r.status(500).json({success:!1,error:e.toString()})});if(n&&n.then)return n.then(function(){})}else r.status(401).json({error:"please check that TokenPass is running and you're signed in. check TokenPass dashboard at http://localhost:21000",code:1,errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")})}();return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),re.delete("/state",w.default(),function(e,r){try{var t=new URL(e.headers.origin).host;return c.delete(A({},e.body,{host:t})),r.json({success:!0}),Promise.resolve()}catch(e){return Promise.reject(e)}}),re.get("/profile",w.default(),function(e,r){try{return Promise.resolve(c.findOne({host:"global"})).then(function(e){r.json(e)})}catch(e){return Promise.reject(e)}}),re.get("/state",w.default(),function(e,r){try{var t=new URL(e.headers.origin).host;return Promise.resolve(c.findOne({host:t})).then(function(e){r.json(e)})}catch(e){return Promise.reject(e)}}),re.post("/login",function(e,r){try{var t=X(function(){return Promise.resolve(s.get(e.body.password)).then(function(e){e?(a.setSeed(e),r.json({success:!0})):r.json({error:"invalid",success:!1})})},function(){});return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),re.post("/logout",w.default(),function(e,r){a.setSeed(null),r.json({success:!0})}),re.post("/fund",w.default(),function(e,r){try{var t=a.getSeed();return Promise.resolve(function(){if(t){var n="http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/fund",o=e.headers.origin,s=o?new URL(o).host:"localhost";return Promise.resolve(c.findOne({host:s})).then(function(t){var o;if(null!=(o=t.scopes)&&o.includes("fund")){var a=t.accessToken,i=e.body.rawtx,c=X(function(){return Promise.resolve(fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({rawtx:i,broadcast:!0,sigma:!0,host:s,authToken:a})})).then(function(e){return Promise.resolve(e.json()).then(function(e){r.json(e)})})},function(e){console.error(e),r.status(500).json({success:!1,error:e.toString()})});return c&&c.then?c.then(function(){}):void 0}r.status(403).json({error:"Insufficient permission",code:7})})}r.status(401).json({error:"please check that TokenPass is running and you're signed in. check TokenPass dashboard at http://localhost:21000",code:1,errorURL:"http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000")+"/auth"})}())}catch(e){return Promise.reject(e)}}),re.post("/auth",w.default(),function(e,r){try{console.log("AUTH ATTEMPTED FROM",e.headers.origin,{host:e.body.host});var t=e.body.password;return Promise.resolve(X(function(){return Promise.resolve(s.get(t)).then(function(t){return function(){if(t){var n;if(a.setSeed(t),e.headers.origin&&!te.includes(e.headers.origin))return void r.status(403).json({error:"The origin is not authorized",code:6});var o=e.body.host;console.log({hosts:o,origin:e.headers.origin});var s=function(e){switch(e){case"forever":return 0;case"once":return 1e4;case"1h":return 36e5;case"1d":return 864e5;case"1w":return 6048e5;case"1m":return 2592e6;default:return"once"}}(e.body.expire),u=i.randomUUID(),l=(null==(n=e.body.scopes)?void 0:n.split(","))||[],d={host:o,accessToken:u,scopes:l,icon:e.body.icon,expireTime:Date.now()+s};return Promise.resolve(c.update(d)).then(function(){r.json({success:!0,accessToken:u,expireTime:s,host:o})})}r.json({error:"invalid",success:!1})}()})},function(e){r.status(500).json({success:!1,error:e.toString()})}))}catch(e){return Promise.reject(e)}}),re.get("/prove",function(e,r){try{new URL(e.headers.origin);var t=e.query.message;return Promise.resolve((void 0)(e.query.txid)).then(function(e){if(e){var n=$(t,e);return r.json({message:n.message,key:e,address:n.address,sig:n.sig,ts:n.ts})}r.status(404).json({error:"txid not found",code:4})})}catch(e){return Promise.reject(e)}}),re.get("/auth",function(e,r){try{var t,n=new URL(e.query.returnURL).host,o=oe(e.headers),s=o||process.env.TOKENPASS_HOST||"localhost";if(o&&s!==n)return r.status(403).json({error:"The origin is not authorized "+s+" "+n,code:6}),Promise.resolve();var a=e.query.returnURL,i=e.query.icon,c=(null==(t=e.query.scopes)?void 0:t.split(","))||[];return console.log("AUTH GET:",{returnURL:a,icon:i}),r.render("auth",{returnURL:a,icon:i,scopes:c,host:s||"lostlhost"}),Promise.resolve()}catch(e){return Promise.reject(e)}}),re.get("/auth/icon",w.default(),function(e,r){try{if(e.headers.origin&&!te.includes(e.headers.origin))return r.status(403).json({error:"The origin is not authorized",code:6}),Promise.resolve();var t=function(e){try{return Promise.resolve(Promise.resolve().then(function(){/*#__PURE__*/return g(require("minidenticons"))})).then(function(r){return r.minidenticon(e)})}catch(e){return Promise.reject(e)}};r.set("Content-Type","image/svg+xml"),r.set("Cache-Control","max-age=31536000");var n=function(){if(a.getSeed())return Promise.resolve(a.findOrCreate({host:"localhost"})).then(function(e){var n=r.send;return Promise.resolve(t(e.pub)).then(function(e){n.call(r,e)})});var e=r.send;return Promise.resolve(t("Anon")).then(function(t){e.call(r,t)})}();return Promise.resolve(n&&n.then?n.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),re.get("/",function(e,r){try{var t=a.getSeed()?Promise.resolve(a.all()).then(function(e){return Promise.resolve(c.all()).then(function(t){console.log(t),r.render("home",{keys:e,states:t,seed:!0})})}):Promise.resolve(s.count()).then(function(t){if(t){var n=oe(e.headers);r.render("login",{host:n})}else r.render("home",{seed:!1})});return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),re.listen(process.env.TOKENPASS_PORT||21e3,function(){console.log("TokenPass listening at http://"+(process.env.TOKENPASS_HOST||"localhost")+":"+(process.env.TOKENPASS_PORT||"21000"))})};
//# sourceMappingURL=index.cjs.map
