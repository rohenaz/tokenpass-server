{"version":3,"file":"index.modern.js","sources":["../src/key.js","../src/crypt.js","../src/seed.js","../src/state.js","../node_modules/safe-buffer/index.js","../node_modules/randombytes/browser.js","../src/utils/bip39words.js","../src/utils/mnemonic.js","../src/wallet/bitcore-message.js","../src/wallet/index.js","../src/index.js"],"sourcesContent":["class Key {\n  constructor(config) {\n    const dbpath = config.db;\n    this.db = new config.Datastore({\n      filename: dbpath + \"/keys.db\",\n      autoload: true,\n    });\n    this.wallet = config.wallet;\n    this.config = config;\n  }\n  setSeed(s) {\n    this.seed = s;\n  }\n  getSeed() {\n    return this.seed;\n  }\n  sign(o) {\n    return this.wallet.sign(o.message, o.key, o.encoding);\n  }\n  encrypt(o) {\n    return this.wallet.encrypt(o.message, o.key);\n  }\n  async findOrCreate(o) {\n    let key = await this.findOne(o);\n    // create a key if it doesn't exist\n    if (!key) {\n      let count = await this.count({});\n      if (this.seed) {\n        key = await this.wallet.create(this.seed, count, o);\n        key = await this.insert(key);\n      } else {\n        console.log(\"Please go to http://localhost:21000 and create a wallet\");\n        return null;\n      }\n    }\n    return key;\n  }\n  findOne(o) {\n    return new Promise((resolve, reject) => {\n      this.db.findOne(o, (err, key) => {\n        if (key) {\n          resolve(this.transform(key));\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n  find(o) {\n    return new Promise((resolve, reject) => {\n      this.db.find(o, (err, keys) => {\n        resolve(\n          keys.map((k) => {\n            return this.transform(k);\n          })\n        );\n      });\n    });\n  }\n  count(o) {\n    return new Promise((resolve, reject) => {\n      this.db.count(o, (err, count) => {\n        resolve(count);\n      });\n    });\n  }\n  insert(key) {\n    return new Promise((resolve, reject) => {\n      this.db.insert(key, (err, doc) => {\n        resolve(this.transform(key));\n      });\n    });\n  }\n  transform(key) {\n    let derived = this.wallet.derive(this.seed, key.path);\n    key.priv = derived.privateKey.toString();\n    key.pub = derived.publicKey.toString();\n    key.address = derived.publicKey.toAddress().toString();\n    return key;\n  }\n  all() {\n    return new Promise((resolve, reject) => {\n      this.db.find({}, (err, keys) => {\n        resolve(\n          keys.map((k) => {\n            return this.transform(k);\n          })\n        );\n      });\n    });\n  }\n}\nexport default Key;\n","import crypto from \"crypto\";\n\nconst algorithm = \"aes-256-cbc\";\n\nexport function encrypt(text, keystr, keyBuffer) {\n  const iv = crypto.randomBytes(16);\n  if (!keyBuffer)\n    keyBuffer = crypto.createHash(\"sha256\").update(keystr).digest();\n  let cipher = crypto.createCipheriv(\"aes-256-cbc\", keyBuffer, iv);\n  let encrypted = cipher.update(text);\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\n  return { iv: iv.toString(\"hex\"), encryptedData: encrypted.toString(\"hex\") };\n}\n\nexport function decrypt(text, keystr, keyBuffer) {\n  const iv = Buffer.from(text.iv, \"hex\");\n  if (!keyBuffer)\n    keyBuffer = crypto.createHash(\"sha256\").update(keystr).digest();\n  let encryptedText = Buffer.from(text.encryptedData, \"hex\");\n  let decipher = crypto.createDecipheriv(\"aes-256-cbc\", keyBuffer, iv);\n  let decrypted = decipher.update(encryptedText);\n  decrypted = Buffer.concat([decrypted, decipher.final()]);\n  return decrypted.toString();\n}\n","import { decrypt, encrypt } from \"./crypt.js\";\n\nclass Seed {\n  constructor(config) {\n    const dbpath = config.db;\n    this.db = new config.Datastore({\n      filename: dbpath + \"/seed.db\",\n      autoload: true,\n    });\n    this.wallet = config.wallet;\n  }\n  get(password) {\n    return new Promise((resolve, reject) => {\n      this.db.findOne({}, (err, r) => {\n        if (r) {\n          try {\n            let decrypted = decrypt(r.hex, password);\n            let s = this.wallet.seed(decrypted);\n            resolve(s);\n          } catch (e) {\n            resolve(null);\n          }\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n  importKey(hex, password) {\n    return new Promise((resolve, reject) => {\n      try {\n        let s = this.wallet.seed(hex);\n        this.db.insert(\n          {\n            hex: encrypt(s.hex, password),\n          },\n          (err, res) => {\n            resolve(s);\n          }\n        );\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n  async exportKey(password) {\n    let s = await this.get(password);\n    return s.hex;\n  }\n  count() {\n    return new Promise((resolve, reject) => {\n      this.db.count({}, (err, count) => {\n        resolve(count);\n      });\n    });\n  }\n  create(password) {\n    return new Promise((resolve, reject) => {\n      let s = this.wallet.seed(undefined, password);\n      this.db.insert(\n        {\n          hex: encrypt(s.hex, password),\n        },\n        (err, res) => {\n          resolve(s);\n        }\n      );\n    });\n  }\n}\nexport default Seed;\n","class State {\n  constructor(config) {\n    const dbpath = config.db;\n    this.db = new config.Datastore({\n      filename: dbpath + \"/state.db\",\n      autoload: true,\n    });\n  }\n  setState(s) {\n    this.state = s;\n  }\n  getState() {\n    return this.state;\n  }\n  async findOrCreate(o) {\n    let state = await this.findOne({ host: o.host });\n    // create a state if it doesn't exist\n    if (!state) {\n      state = await this.insert(o);\n    }\n    return state;\n  }\n  findOne(o) {\n    return new Promise((resolve, reject) => {\n      this.db.findOne(o, (err, state) => {\n        if (state) {\n          delete state._id;\n          resolve(state);\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n  find(o) {\n    return new Promise((resolve, reject) => {\n      this.db.find(o, (err, states) => {\n        resolve(states);\n      });\n    });\n  }\n  delete(o) {\n    return new Promise((resolve, reject) => {\n      this.db.remove(o, (err, states) => {\n        resolve(states);\n      });\n    });\n  }\n  count(o) {\n    return new Promise((resolve, reject) => {\n      this.db.count(o, (err, count) => {\n        resolve(count);\n      });\n    });\n  }\n  insert(state) {\n    return new Promise((resolve, reject) => {\n      this.db.insert(state, (err, doc) => {\n        this.setState(state);\n        resolve(state);\n      });\n    });\n  }\n  update(state) {\n    return new Promise((resolve, reject) => {\n      this.db.update(\n        { host: state.host },\n        { $set: state },\n        {\n          upsert: true,\n          returnUpdatedDocs: true,\n        },\n        (err, numReplaced, doc) => {\n          console.log(\"UPDATED\", { err, accessToken: doc.accessToken });\n          this.setState(doc);\n          resolve(doc);\n        }\n      );\n    });\n  }\n  all() {\n    return new Promise((resolve, reject) => {\n      this.db.find({}, (err, states) => {\n        resolve(states);\n      });\n    });\n  }\n}\nexport default State;\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","export const bip39words = [\n  \"abandon\",\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"absent\",\n  \"absorb\",\n  \"abstract\",\n  \"absurd\",\n  \"abuse\",\n  \"access\",\n  \"accident\",\n  \"account\",\n  \"accuse\",\n  \"achieve\",\n  \"acid\",\n  \"acoustic\",\n  \"acquire\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"actor\",\n  \"actress\",\n  \"actual\",\n  \"adapt\",\n  \"add\",\n  \"addict\",\n  \"address\",\n  \"adjust\",\n  \"admit\",\n  \"adult\",\n  \"advance\",\n  \"advice\",\n  \"aerobic\",\n  \"affair\",\n  \"afford\",\n  \"afraid\",\n  \"again\",\n  \"age\",\n  \"agent\",\n  \"agree\",\n  \"ahead\",\n  \"aim\",\n  \"air\",\n  \"airport\",\n  \"aisle\",\n  \"alarm\",\n  \"album\",\n  \"alcohol\",\n  \"alert\",\n  \"alien\",\n  \"all\",\n  \"alley\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"alpha\",\n  \"already\",\n  \"also\",\n  \"alter\",\n  \"always\",\n  \"amateur\",\n  \"amazing\",\n  \"among\",\n  \"amount\",\n  \"amused\",\n  \"analyst\",\n  \"anchor\",\n  \"ancient\",\n  \"anger\",\n  \"angle\",\n  \"angry\",\n  \"animal\",\n  \"ankle\",\n  \"announce\",\n  \"annual\",\n  \"another\",\n  \"answer\",\n  \"antenna\",\n  \"antique\",\n  \"anxiety\",\n  \"any\",\n  \"apart\",\n  \"apology\",\n  \"appear\",\n  \"apple\",\n  \"approve\",\n  \"april\",\n  \"arch\",\n  \"arctic\",\n  \"area\",\n  \"arena\",\n  \"argue\",\n  \"arm\",\n  \"armed\",\n  \"armor\",\n  \"army\",\n  \"around\",\n  \"arrange\",\n  \"arrest\",\n  \"arrive\",\n  \"arrow\",\n  \"art\",\n  \"artefact\",\n  \"artist\",\n  \"artwork\",\n  \"ask\",\n  \"aspect\",\n  \"assault\",\n  \"asset\",\n  \"assist\",\n  \"assume\",\n  \"asthma\",\n  \"athlete\",\n  \"atom\",\n  \"attack\",\n  \"attend\",\n  \"attitude\",\n  \"attract\",\n  \"auction\",\n  \"audit\",\n  \"august\",\n  \"aunt\",\n  \"author\",\n  \"auto\",\n  \"autumn\",\n  \"average\",\n  \"avocado\",\n  \"avoid\",\n  \"awake\",\n  \"aware\",\n  \"away\",\n  \"awesome\",\n  \"awful\",\n  \"awkward\",\n  \"axis\",\n  \"baby\",\n  \"bachelor\",\n  \"bacon\",\n  \"badge\",\n  \"bag\",\n  \"balance\",\n  \"balcony\",\n  \"ball\",\n  \"bamboo\",\n  \"banana\",\n  \"banner\",\n  \"bar\",\n  \"barely\",\n  \"bargain\",\n  \"barrel\",\n  \"base\",\n  \"basic\",\n  \"basket\",\n  \"battle\",\n  \"beach\",\n  \"bean\",\n  \"beauty\",\n  \"because\",\n  \"become\",\n  \"beef\",\n  \"before\",\n  \"begin\",\n  \"behave\",\n  \"behind\",\n  \"believe\",\n  \"below\",\n  \"belt\",\n  \"bench\",\n  \"benefit\",\n  \"best\",\n  \"betray\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"bicycle\",\n  \"bid\",\n  \"bike\",\n  \"bind\",\n  \"biology\",\n  \"bird\",\n  \"birth\",\n  \"bitter\",\n  \"black\",\n  \"blade\",\n  \"blame\",\n  \"blanket\",\n  \"blast\",\n  \"bleak\",\n  \"bless\",\n  \"blind\",\n  \"blood\",\n  \"blossom\",\n  \"blouse\",\n  \"blue\",\n  \"blur\",\n  \"blush\",\n  \"board\",\n  \"boat\",\n  \"body\",\n  \"boil\",\n  \"bomb\",\n  \"bone\",\n  \"bonus\",\n  \"book\",\n  \"boost\",\n  \"border\",\n  \"boring\",\n  \"borrow\",\n  \"boss\",\n  \"bottom\",\n  \"bounce\",\n  \"box\",\n  \"boy\",\n  \"bracket\",\n  \"brain\",\n  \"brand\",\n  \"brass\",\n  \"brave\",\n  \"bread\",\n  \"breeze\",\n  \"brick\",\n  \"bridge\",\n  \"brief\",\n  \"bright\",\n  \"bring\",\n  \"brisk\",\n  \"broccoli\",\n  \"broken\",\n  \"bronze\",\n  \"broom\",\n  \"brother\",\n  \"brown\",\n  \"brush\",\n  \"bubble\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"build\",\n  \"bulb\",\n  \"bulk\",\n  \"bullet\",\n  \"bundle\",\n  \"bunker\",\n  \"burden\",\n  \"burger\",\n  \"burst\",\n  \"bus\",\n  \"business\",\n  \"busy\",\n  \"butter\",\n  \"buyer\",\n  \"buzz\",\n  \"cabbage\",\n  \"cabin\",\n  \"cable\",\n  \"cactus\",\n  \"cage\",\n  \"cake\",\n  \"call\",\n  \"calm\",\n  \"camera\",\n  \"camp\",\n  \"can\",\n  \"canal\",\n  \"cancel\",\n  \"candy\",\n  \"cannon\",\n  \"canoe\",\n  \"canvas\",\n  \"canyon\",\n  \"capable\",\n  \"capital\",\n  \"captain\",\n  \"car\",\n  \"carbon\",\n  \"card\",\n  \"cargo\",\n  \"carpet\",\n  \"carry\",\n  \"cart\",\n  \"case\",\n  \"cash\",\n  \"casino\",\n  \"castle\",\n  \"casual\",\n  \"cat\",\n  \"catalog\",\n  \"catch\",\n  \"category\",\n  \"cattle\",\n  \"caught\",\n  \"cause\",\n  \"caution\",\n  \"cave\",\n  \"ceiling\",\n  \"celery\",\n  \"cement\",\n  \"census\",\n  \"century\",\n  \"cereal\",\n  \"certain\",\n  \"chair\",\n  \"chalk\",\n  \"champion\",\n  \"change\",\n  \"chaos\",\n  \"chapter\",\n  \"charge\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"check\",\n  \"cheese\",\n  \"chef\",\n  \"cherry\",\n  \"chest\",\n  \"chicken\",\n  \"chief\",\n  \"child\",\n  \"chimney\",\n  \"choice\",\n  \"choose\",\n  \"chronic\",\n  \"chuckle\",\n  \"chunk\",\n  \"churn\",\n  \"cigar\",\n  \"cinnamon\",\n  \"circle\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"clap\",\n  \"clarify\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clerk\",\n  \"clever\",\n  \"click\",\n  \"client\",\n  \"cliff\",\n  \"climb\",\n  \"clinic\",\n  \"clip\",\n  \"clock\",\n  \"clog\",\n  \"close\",\n  \"cloth\",\n  \"cloud\",\n  \"clown\",\n  \"club\",\n  \"clump\",\n  \"cluster\",\n  \"clutch\",\n  \"coach\",\n  \"coast\",\n  \"coconut\",\n  \"code\",\n  \"coffee\",\n  \"coil\",\n  \"coin\",\n  \"collect\",\n  \"color\",\n  \"column\",\n  \"combine\",\n  \"come\",\n  \"comfort\",\n  \"comic\",\n  \"common\",\n  \"company\",\n  \"concert\",\n  \"conduct\",\n  \"confirm\",\n  \"congress\",\n  \"connect\",\n  \"consider\",\n  \"control\",\n  \"convince\",\n  \"cook\",\n  \"cool\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"core\",\n  \"corn\",\n  \"correct\",\n  \"cost\",\n  \"cotton\",\n  \"couch\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"cousin\",\n  \"cover\",\n  \"coyote\",\n  \"crack\",\n  \"cradle\",\n  \"craft\",\n  \"cram\",\n  \"crane\",\n  \"crash\",\n  \"crater\",\n  \"crawl\",\n  \"crazy\",\n  \"cream\",\n  \"credit\",\n  \"creek\",\n  \"crew\",\n  \"cricket\",\n  \"crime\",\n  \"crisp\",\n  \"critic\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crowd\",\n  \"crucial\",\n  \"cruel\",\n  \"cruise\",\n  \"crumble\",\n  \"crunch\",\n  \"crush\",\n  \"cry\",\n  \"crystal\",\n  \"cube\",\n  \"culture\",\n  \"cup\",\n  \"cupboard\",\n  \"curious\",\n  \"current\",\n  \"curtain\",\n  \"curve\",\n  \"cushion\",\n  \"custom\",\n  \"cute\",\n  \"cycle\",\n  \"dad\",\n  \"damage\",\n  \"damp\",\n  \"dance\",\n  \"danger\",\n  \"daring\",\n  \"dash\",\n  \"daughter\",\n  \"dawn\",\n  \"day\",\n  \"deal\",\n  \"debate\",\n  \"debris\",\n  \"decade\",\n  \"december\",\n  \"decide\",\n  \"decline\",\n  \"decorate\",\n  \"decrease\",\n  \"deer\",\n  \"defense\",\n  \"define\",\n  \"defy\",\n  \"degree\",\n  \"delay\",\n  \"deliver\",\n  \"demand\",\n  \"demise\",\n  \"denial\",\n  \"dentist\",\n  \"deny\",\n  \"depart\",\n  \"depend\",\n  \"deposit\",\n  \"depth\",\n  \"deputy\",\n  \"derive\",\n  \"describe\",\n  \"desert\",\n  \"design\",\n  \"desk\",\n  \"despair\",\n  \"destroy\",\n  \"detail\",\n  \"detect\",\n  \"develop\",\n  \"device\",\n  \"devote\",\n  \"diagram\",\n  \"dial\",\n  \"diamond\",\n  \"diary\",\n  \"dice\",\n  \"diesel\",\n  \"diet\",\n  \"differ\",\n  \"digital\",\n  \"dignity\",\n  \"dilemma\",\n  \"dinner\",\n  \"dinosaur\",\n  \"direct\",\n  \"dirt\",\n  \"disagree\",\n  \"discover\",\n  \"disease\",\n  \"dish\",\n  \"dismiss\",\n  \"disorder\",\n  \"display\",\n  \"distance\",\n  \"divert\",\n  \"divide\",\n  \"divorce\",\n  \"dizzy\",\n  \"doctor\",\n  \"document\",\n  \"dog\",\n  \"doll\",\n  \"dolphin\",\n  \"domain\",\n  \"donate\",\n  \"donkey\",\n  \"donor\",\n  \"door\",\n  \"dose\",\n  \"double\",\n  \"dove\",\n  \"draft\",\n  \"dragon\",\n  \"drama\",\n  \"drastic\",\n  \"draw\",\n  \"dream\",\n  \"dress\",\n  \"drift\",\n  \"drill\",\n  \"drink\",\n  \"drip\",\n  \"drive\",\n  \"drop\",\n  \"drum\",\n  \"dry\",\n  \"duck\",\n  \"dumb\",\n  \"dune\",\n  \"during\",\n  \"dust\",\n  \"dutch\",\n  \"duty\",\n  \"dwarf\",\n  \"dynamic\",\n  \"eager\",\n  \"eagle\",\n  \"early\",\n  \"earn\",\n  \"earth\",\n  \"easily\",\n  \"east\",\n  \"easy\",\n  \"echo\",\n  \"ecology\",\n  \"economy\",\n  \"edge\",\n  \"edit\",\n  \"educate\",\n  \"effort\",\n  \"egg\",\n  \"eight\",\n  \"either\",\n  \"elbow\",\n  \"elder\",\n  \"electric\",\n  \"elegant\",\n  \"element\",\n  \"elephant\",\n  \"elevator\",\n  \"elite\",\n  \"else\",\n  \"embark\",\n  \"embody\",\n  \"embrace\",\n  \"emerge\",\n  \"emotion\",\n  \"employ\",\n  \"empower\",\n  \"empty\",\n  \"enable\",\n  \"enact\",\n  \"end\",\n  \"endless\",\n  \"endorse\",\n  \"enemy\",\n  \"energy\",\n  \"enforce\",\n  \"engage\",\n  \"engine\",\n  \"enhance\",\n  \"enjoy\",\n  \"enlist\",\n  \"enough\",\n  \"enrich\",\n  \"enroll\",\n  \"ensure\",\n  \"enter\",\n  \"entire\",\n  \"entry\",\n  \"envelope\",\n  \"episode\",\n  \"equal\",\n  \"equip\",\n  \"era\",\n  \"erase\",\n  \"erode\",\n  \"erosion\",\n  \"error\",\n  \"erupt\",\n  \"escape\",\n  \"essay\",\n  \"essence\",\n  \"estate\",\n  \"eternal\",\n  \"ethics\",\n  \"evidence\",\n  \"evil\",\n  \"evoke\",\n  \"evolve\",\n  \"exact\",\n  \"example\",\n  \"excess\",\n  \"exchange\",\n  \"excite\",\n  \"exclude\",\n  \"excuse\",\n  \"execute\",\n  \"exercise\",\n  \"exhaust\",\n  \"exhibit\",\n  \"exile\",\n  \"exist\",\n  \"exit\",\n  \"exotic\",\n  \"expand\",\n  \"expect\",\n  \"expire\",\n  \"explain\",\n  \"expose\",\n  \"express\",\n  \"extend\",\n  \"extra\",\n  \"eye\",\n  \"eyebrow\",\n  \"fabric\",\n  \"face\",\n  \"faculty\",\n  \"fade\",\n  \"faint\",\n  \"faith\",\n  \"fall\",\n  \"false\",\n  \"fame\",\n  \"family\",\n  \"famous\",\n  \"fan\",\n  \"fancy\",\n  \"fantasy\",\n  \"farm\",\n  \"fashion\",\n  \"fat\",\n  \"fatal\",\n  \"father\",\n  \"fatigue\",\n  \"fault\",\n  \"favorite\",\n  \"feature\",\n  \"february\",\n  \"federal\",\n  \"fee\",\n  \"feed\",\n  \"feel\",\n  \"female\",\n  \"fence\",\n  \"festival\",\n  \"fetch\",\n  \"fever\",\n  \"few\",\n  \"fiber\",\n  \"fiction\",\n  \"field\",\n  \"figure\",\n  \"file\",\n  \"film\",\n  \"filter\",\n  \"final\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fiscal\",\n  \"fish\",\n  \"fit\",\n  \"fitness\",\n  \"fix\",\n  \"flag\",\n  \"flame\",\n  \"flash\",\n  \"flat\",\n  \"flavor\",\n  \"flee\",\n  \"flight\",\n  \"flip\",\n  \"float\",\n  \"flock\",\n  \"floor\",\n  \"flower\",\n  \"fluid\",\n  \"flush\",\n  \"fly\",\n  \"foam\",\n  \"focus\",\n  \"fog\",\n  \"foil\",\n  \"fold\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"force\",\n  \"forest\",\n  \"forget\",\n  \"fork\",\n  \"fortune\",\n  \"forum\",\n  \"forward\",\n  \"fossil\",\n  \"foster\",\n  \"found\",\n  \"fox\",\n  \"fragile\",\n  \"frame\",\n  \"frequent\",\n  \"fresh\",\n  \"friend\",\n  \"fringe\",\n  \"frog\",\n  \"front\",\n  \"frost\",\n  \"frown\",\n  \"frozen\",\n  \"fruit\",\n  \"fuel\",\n  \"fun\",\n  \"funny\",\n  \"furnace\",\n  \"fury\",\n  \"future\",\n  \"gadget\",\n  \"gain\",\n  \"galaxy\",\n  \"gallery\",\n  \"game\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"garlic\",\n  \"garment\",\n  \"gas\",\n  \"gasp\",\n  \"gate\",\n  \"gather\",\n  \"gauge\",\n  \"gaze\",\n  \"general\",\n  \"genius\",\n  \"genre\",\n  \"gentle\",\n  \"genuine\",\n  \"gesture\",\n  \"ghost\",\n  \"giant\",\n  \"gift\",\n  \"giggle\",\n  \"ginger\",\n  \"giraffe\",\n  \"girl\",\n  \"give\",\n  \"glad\",\n  \"glance\",\n  \"glare\",\n  \"glass\",\n  \"glide\",\n  \"glimpse\",\n  \"globe\",\n  \"gloom\",\n  \"glory\",\n  \"glove\",\n  \"glow\",\n  \"glue\",\n  \"goat\",\n  \"goddess\",\n  \"gold\",\n  \"good\",\n  \"goose\",\n  \"gorilla\",\n  \"gospel\",\n  \"gossip\",\n  \"govern\",\n  \"gown\",\n  \"grab\",\n  \"grace\",\n  \"grain\",\n  \"grant\",\n  \"grape\",\n  \"grass\",\n  \"gravity\",\n  \"great\",\n  \"green\",\n  \"grid\",\n  \"grief\",\n  \"grit\",\n  \"grocery\",\n  \"group\",\n  \"grow\",\n  \"grunt\",\n  \"guard\",\n  \"guess\",\n  \"guide\",\n  \"guilt\",\n  \"guitar\",\n  \"gun\",\n  \"gym\",\n  \"habit\",\n  \"hair\",\n  \"half\",\n  \"hammer\",\n  \"hamster\",\n  \"hand\",\n  \"happy\",\n  \"harbor\",\n  \"hard\",\n  \"harsh\",\n  \"harvest\",\n  \"hat\",\n  \"have\",\n  \"hawk\",\n  \"hazard\",\n  \"head\",\n  \"health\",\n  \"heart\",\n  \"heavy\",\n  \"hedgehog\",\n  \"height\",\n  \"hello\",\n  \"helmet\",\n  \"help\",\n  \"hen\",\n  \"hero\",\n  \"hidden\",\n  \"high\",\n  \"hill\",\n  \"hint\",\n  \"hip\",\n  \"hire\",\n  \"history\",\n  \"hobby\",\n  \"hockey\",\n  \"hold\",\n  \"hole\",\n  \"holiday\",\n  \"hollow\",\n  \"home\",\n  \"honey\",\n  \"hood\",\n  \"hope\",\n  \"horn\",\n  \"horror\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hotel\",\n  \"hour\",\n  \"hover\",\n  \"hub\",\n  \"huge\",\n  \"human\",\n  \"humble\",\n  \"humor\",\n  \"hundred\",\n  \"hungry\",\n  \"hunt\",\n  \"hurdle\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hybrid\",\n  \"ice\",\n  \"icon\",\n  \"idea\",\n  \"identify\",\n  \"idle\",\n  \"ignore\",\n  \"ill\",\n  \"illegal\",\n  \"illness\",\n  \"image\",\n  \"imitate\",\n  \"immense\",\n  \"immune\",\n  \"impact\",\n  \"impose\",\n  \"improve\",\n  \"impulse\",\n  \"inch\",\n  \"include\",\n  \"income\",\n  \"increase\",\n  \"index\",\n  \"indicate\",\n  \"indoor\",\n  \"industry\",\n  \"infant\",\n  \"inflict\",\n  \"inform\",\n  \"inhale\",\n  \"inherit\",\n  \"initial\",\n  \"inject\",\n  \"injury\",\n  \"inmate\",\n  \"inner\",\n  \"innocent\",\n  \"input\",\n  \"inquiry\",\n  \"insane\",\n  \"insect\",\n  \"inside\",\n  \"inspire\",\n  \"install\",\n  \"intact\",\n  \"interest\",\n  \"into\",\n  \"invest\",\n  \"invite\",\n  \"involve\",\n  \"iron\",\n  \"island\",\n  \"isolate\",\n  \"issue\",\n  \"item\",\n  \"ivory\",\n  \"jacket\",\n  \"jaguar\",\n  \"jar\",\n  \"jazz\",\n  \"jealous\",\n  \"jeans\",\n  \"jelly\",\n  \"jewel\",\n  \"job\",\n  \"join\",\n  \"joke\",\n  \"journey\",\n  \"joy\",\n  \"judge\",\n  \"juice\",\n  \"jump\",\n  \"jungle\",\n  \"junior\",\n  \"junk\",\n  \"just\",\n  \"kangaroo\",\n  \"keen\",\n  \"keep\",\n  \"ketchup\",\n  \"key\",\n  \"kick\",\n  \"kid\",\n  \"kidney\",\n  \"kind\",\n  \"kingdom\",\n  \"kiss\",\n  \"kit\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kiwi\",\n  \"knee\",\n  \"knife\",\n  \"knock\",\n  \"know\",\n  \"lab\",\n  \"label\",\n  \"labor\",\n  \"ladder\",\n  \"lady\",\n  \"lake\",\n  \"lamp\",\n  \"language\",\n  \"laptop\",\n  \"large\",\n  \"later\",\n  \"latin\",\n  \"laugh\",\n  \"laundry\",\n  \"lava\",\n  \"law\",\n  \"lawn\",\n  \"lawsuit\",\n  \"layer\",\n  \"lazy\",\n  \"leader\",\n  \"leaf\",\n  \"learn\",\n  \"leave\",\n  \"lecture\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"legend\",\n  \"leisure\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"leopard\",\n  \"lesson\",\n  \"letter\",\n  \"level\",\n  \"liar\",\n  \"liberty\",\n  \"library\",\n  \"license\",\n  \"life\",\n  \"lift\",\n  \"light\",\n  \"like\",\n  \"limb\",\n  \"limit\",\n  \"link\",\n  \"lion\",\n  \"liquid\",\n  \"list\",\n  \"little\",\n  \"live\",\n  \"lizard\",\n  \"load\",\n  \"loan\",\n  \"lobster\",\n  \"local\",\n  \"lock\",\n  \"logic\",\n  \"lonely\",\n  \"long\",\n  \"loop\",\n  \"lottery\",\n  \"loud\",\n  \"lounge\",\n  \"love\",\n  \"loyal\",\n  \"lucky\",\n  \"luggage\",\n  \"lumber\",\n  \"lunar\",\n  \"lunch\",\n  \"luxury\",\n  \"lyrics\",\n  \"machine\",\n  \"mad\",\n  \"magic\",\n  \"magnet\",\n  \"maid\",\n  \"mail\",\n  \"main\",\n  \"major\",\n  \"make\",\n  \"mammal\",\n  \"man\",\n  \"manage\",\n  \"mandate\",\n  \"mango\",\n  \"mansion\",\n  \"manual\",\n  \"maple\",\n  \"marble\",\n  \"march\",\n  \"margin\",\n  \"marine\",\n  \"market\",\n  \"marriage\",\n  \"mask\",\n  \"mass\",\n  \"master\",\n  \"match\",\n  \"material\",\n  \"math\",\n  \"matrix\",\n  \"matter\",\n  \"maximum\",\n  \"maze\",\n  \"meadow\",\n  \"mean\",\n  \"measure\",\n  \"meat\",\n  \"mechanic\",\n  \"medal\",\n  \"media\",\n  \"melody\",\n  \"melt\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"menu\",\n  \"mercy\",\n  \"merge\",\n  \"merit\",\n  \"merry\",\n  \"mesh\",\n  \"message\",\n  \"metal\",\n  \"method\",\n  \"middle\",\n  \"midnight\",\n  \"milk\",\n  \"million\",\n  \"mimic\",\n  \"mind\",\n  \"minimum\",\n  \"minor\",\n  \"minute\",\n  \"miracle\",\n  \"mirror\",\n  \"misery\",\n  \"miss\",\n  \"mistake\",\n  \"mix\",\n  \"mixed\",\n  \"mixture\",\n  \"mobile\",\n  \"model\",\n  \"modify\",\n  \"mom\",\n  \"moment\",\n  \"monitor\",\n  \"monkey\",\n  \"monster\",\n  \"month\",\n  \"moon\",\n  \"moral\",\n  \"more\",\n  \"morning\",\n  \"mosquito\",\n  \"mother\",\n  \"motion\",\n  \"motor\",\n  \"mountain\",\n  \"mouse\",\n  \"move\",\n  \"movie\",\n  \"much\",\n  \"muffin\",\n  \"mule\",\n  \"multiply\",\n  \"muscle\",\n  \"museum\",\n  \"mushroom\",\n  \"music\",\n  \"must\",\n  \"mutual\",\n  \"myself\",\n  \"mystery\",\n  \"myth\",\n  \"naive\",\n  \"name\",\n  \"napkin\",\n  \"narrow\",\n  \"nasty\",\n  \"nation\",\n  \"nature\",\n  \"near\",\n  \"neck\",\n  \"need\",\n  \"negative\",\n  \"neglect\",\n  \"neither\",\n  \"nephew\",\n  \"nerve\",\n  \"nest\",\n  \"net\",\n  \"network\",\n  \"neutral\",\n  \"never\",\n  \"news\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"noble\",\n  \"noise\",\n  \"nominee\",\n  \"noodle\",\n  \"normal\",\n  \"north\",\n  \"nose\",\n  \"notable\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"novel\",\n  \"now\",\n  \"nuclear\",\n  \"number\",\n  \"nurse\",\n  \"nut\",\n  \"oak\",\n  \"obey\",\n  \"object\",\n  \"oblige\",\n  \"obscure\",\n  \"observe\",\n  \"obtain\",\n  \"obvious\",\n  \"occur\",\n  \"ocean\",\n  \"october\",\n  \"odor\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"often\",\n  \"oil\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympic\",\n  \"omit\",\n  \"once\",\n  \"one\",\n  \"onion\",\n  \"online\",\n  \"only\",\n  \"open\",\n  \"opera\",\n  \"opinion\",\n  \"oppose\",\n  \"option\",\n  \"orange\",\n  \"orbit\",\n  \"orchard\",\n  \"order\",\n  \"ordinary\",\n  \"organ\",\n  \"orient\",\n  \"original\",\n  \"orphan\",\n  \"ostrich\",\n  \"other\",\n  \"outdoor\",\n  \"outer\",\n  \"output\",\n  \"outside\",\n  \"oval\",\n  \"oven\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"oxygen\",\n  \"oyster\",\n  \"ozone\",\n  \"pact\",\n  \"paddle\",\n  \"page\",\n  \"pair\",\n  \"palace\",\n  \"palm\",\n  \"panda\",\n  \"panel\",\n  \"panic\",\n  \"panther\",\n  \"paper\",\n  \"parade\",\n  \"parent\",\n  \"park\",\n  \"parrot\",\n  \"party\",\n  \"pass\",\n  \"patch\",\n  \"path\",\n  \"patient\",\n  \"patrol\",\n  \"pattern\",\n  \"pause\",\n  \"pave\",\n  \"payment\",\n  \"peace\",\n  \"peanut\",\n  \"pear\",\n  \"peasant\",\n  \"pelican\",\n  \"pen\",\n  \"penalty\",\n  \"pencil\",\n  \"people\",\n  \"pepper\",\n  \"perfect\",\n  \"permit\",\n  \"person\",\n  \"pet\",\n  \"phone\",\n  \"photo\",\n  \"phrase\",\n  \"physical\",\n  \"piano\",\n  \"picnic\",\n  \"picture\",\n  \"piece\",\n  \"pig\",\n  \"pigeon\",\n  \"pill\",\n  \"pilot\",\n  \"pink\",\n  \"pioneer\",\n  \"pipe\",\n  \"pistol\",\n  \"pitch\",\n  \"pizza\",\n  \"place\",\n  \"planet\",\n  \"plastic\",\n  \"plate\",\n  \"play\",\n  \"please\",\n  \"pledge\",\n  \"pluck\",\n  \"plug\",\n  \"plunge\",\n  \"poem\",\n  \"poet\",\n  \"point\",\n  \"polar\",\n  \"pole\",\n  \"police\",\n  \"pond\",\n  \"pony\",\n  \"pool\",\n  \"popular\",\n  \"portion\",\n  \"position\",\n  \"possible\",\n  \"post\",\n  \"potato\",\n  \"pottery\",\n  \"poverty\",\n  \"powder\",\n  \"power\",\n  \"practice\",\n  \"praise\",\n  \"predict\",\n  \"prefer\",\n  \"prepare\",\n  \"present\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"pride\",\n  \"primary\",\n  \"print\",\n  \"priority\",\n  \"prison\",\n  \"private\",\n  \"prize\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"profit\",\n  \"program\",\n  \"project\",\n  \"promote\",\n  \"proof\",\n  \"property\",\n  \"prosper\",\n  \"protect\",\n  \"proud\",\n  \"provide\",\n  \"public\",\n  \"pudding\",\n  \"pull\",\n  \"pulp\",\n  \"pulse\",\n  \"pumpkin\",\n  \"punch\",\n  \"pupil\",\n  \"puppy\",\n  \"purchase\",\n  \"purity\",\n  \"purpose\",\n  \"purse\",\n  \"push\",\n  \"put\",\n  \"puzzle\",\n  \"pyramid\",\n  \"quality\",\n  \"quantum\",\n  \"quarter\",\n  \"question\",\n  \"quick\",\n  \"quit\",\n  \"quiz\",\n  \"quote\",\n  \"rabbit\",\n  \"raccoon\",\n  \"race\",\n  \"rack\",\n  \"radar\",\n  \"radio\",\n  \"rail\",\n  \"rain\",\n  \"raise\",\n  \"rally\",\n  \"ramp\",\n  \"ranch\",\n  \"random\",\n  \"range\",\n  \"rapid\",\n  \"rare\",\n  \"rate\",\n  \"rather\",\n  \"raven\",\n  \"raw\",\n  \"razor\",\n  \"ready\",\n  \"real\",\n  \"reason\",\n  \"rebel\",\n  \"rebuild\",\n  \"recall\",\n  \"receive\",\n  \"recipe\",\n  \"record\",\n  \"recycle\",\n  \"reduce\",\n  \"reflect\",\n  \"reform\",\n  \"refuse\",\n  \"region\",\n  \"regret\",\n  \"regular\",\n  \"reject\",\n  \"relax\",\n  \"release\",\n  \"relief\",\n  \"rely\",\n  \"remain\",\n  \"remember\",\n  \"remind\",\n  \"remove\",\n  \"render\",\n  \"renew\",\n  \"rent\",\n  \"reopen\",\n  \"repair\",\n  \"repeat\",\n  \"replace\",\n  \"report\",\n  \"require\",\n  \"rescue\",\n  \"resemble\",\n  \"resist\",\n  \"resource\",\n  \"response\",\n  \"result\",\n  \"retire\",\n  \"retreat\",\n  \"return\",\n  \"reunion\",\n  \"reveal\",\n  \"review\",\n  \"reward\",\n  \"rhythm\",\n  \"rib\",\n  \"ribbon\",\n  \"rice\",\n  \"rich\",\n  \"ride\",\n  \"ridge\",\n  \"rifle\",\n  \"right\",\n  \"rigid\",\n  \"ring\",\n  \"riot\",\n  \"ripple\",\n  \"risk\",\n  \"ritual\",\n  \"rival\",\n  \"river\",\n  \"road\",\n  \"roast\",\n  \"robot\",\n  \"robust\",\n  \"rocket\",\n  \"romance\",\n  \"roof\",\n  \"rookie\",\n  \"room\",\n  \"rose\",\n  \"rotate\",\n  \"rough\",\n  \"round\",\n  \"route\",\n  \"royal\",\n  \"rubber\",\n  \"rude\",\n  \"rug\",\n  \"rule\",\n  \"run\",\n  \"runway\",\n  \"rural\",\n  \"sad\",\n  \"saddle\",\n  \"sadness\",\n  \"safe\",\n  \"sail\",\n  \"salad\",\n  \"salmon\",\n  \"salon\",\n  \"salt\",\n  \"salute\",\n  \"same\",\n  \"sample\",\n  \"sand\",\n  \"satisfy\",\n  \"satoshi\",\n  \"sauce\",\n  \"sausage\",\n  \"save\",\n  \"say\",\n  \"scale\",\n  \"scan\",\n  \"scare\",\n  \"scatter\",\n  \"scene\",\n  \"scheme\",\n  \"school\",\n  \"science\",\n  \"scissors\",\n  \"scorpion\",\n  \"scout\",\n  \"scrap\",\n  \"screen\",\n  \"script\",\n  \"scrub\",\n  \"sea\",\n  \"search\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"secret\",\n  \"section\",\n  \"security\",\n  \"seed\",\n  \"seek\",\n  \"segment\",\n  \"select\",\n  \"sell\",\n  \"seminar\",\n  \"senior\",\n  \"sense\",\n  \"sentence\",\n  \"series\",\n  \"service\",\n  \"session\",\n  \"settle\",\n  \"setup\",\n  \"seven\",\n  \"shadow\",\n  \"shaft\",\n  \"shallow\",\n  \"share\",\n  \"shed\",\n  \"shell\",\n  \"sheriff\",\n  \"shield\",\n  \"shift\",\n  \"shine\",\n  \"ship\",\n  \"shiver\",\n  \"shock\",\n  \"shoe\",\n  \"shoot\",\n  \"shop\",\n  \"short\",\n  \"shoulder\",\n  \"shove\",\n  \"shrimp\",\n  \"shrug\",\n  \"shuffle\",\n  \"shy\",\n  \"sibling\",\n  \"sick\",\n  \"side\",\n  \"siege\",\n  \"sight\",\n  \"sign\",\n  \"silent\",\n  \"silk\",\n  \"silly\",\n  \"silver\",\n  \"similar\",\n  \"simple\",\n  \"since\",\n  \"sing\",\n  \"siren\",\n  \"sister\",\n  \"situate\",\n  \"six\",\n  \"size\",\n  \"skate\",\n  \"sketch\",\n  \"ski\",\n  \"skill\",\n  \"skin\",\n  \"skirt\",\n  \"skull\",\n  \"slab\",\n  \"slam\",\n  \"sleep\",\n  \"slender\",\n  \"slice\",\n  \"slide\",\n  \"slight\",\n  \"slim\",\n  \"slogan\",\n  \"slot\",\n  \"slow\",\n  \"slush\",\n  \"small\",\n  \"smart\",\n  \"smile\",\n  \"smoke\",\n  \"smooth\",\n  \"snack\",\n  \"snake\",\n  \"snap\",\n  \"sniff\",\n  \"snow\",\n  \"soap\",\n  \"soccer\",\n  \"social\",\n  \"sock\",\n  \"soda\",\n  \"soft\",\n  \"solar\",\n  \"soldier\",\n  \"solid\",\n  \"solution\",\n  \"solve\",\n  \"someone\",\n  \"song\",\n  \"soon\",\n  \"sorry\",\n  \"sort\",\n  \"soul\",\n  \"sound\",\n  \"soup\",\n  \"source\",\n  \"south\",\n  \"space\",\n  \"spare\",\n  \"spatial\",\n  \"spawn\",\n  \"speak\",\n  \"special\",\n  \"speed\",\n  \"spell\",\n  \"spend\",\n  \"sphere\",\n  \"spice\",\n  \"spider\",\n  \"spike\",\n  \"spin\",\n  \"spirit\",\n  \"split\",\n  \"spoil\",\n  \"sponsor\",\n  \"spoon\",\n  \"sport\",\n  \"spot\",\n  \"spray\",\n  \"spread\",\n  \"spring\",\n  \"spy\",\n  \"square\",\n  \"squeeze\",\n  \"squirrel\",\n  \"stable\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"stairs\",\n  \"stamp\",\n  \"stand\",\n  \"start\",\n  \"state\",\n  \"stay\",\n  \"steak\",\n  \"steel\",\n  \"stem\",\n  \"step\",\n  \"stereo\",\n  \"stick\",\n  \"still\",\n  \"sting\",\n  \"stock\",\n  \"stomach\",\n  \"stone\",\n  \"stool\",\n  \"story\",\n  \"stove\",\n  \"strategy\",\n  \"street\",\n  \"strike\",\n  \"strong\",\n  \"struggle\",\n  \"student\",\n  \"stuff\",\n  \"stumble\",\n  \"style\",\n  \"subject\",\n  \"submit\",\n  \"subway\",\n  \"success\",\n  \"such\",\n  \"sudden\",\n  \"suffer\",\n  \"sugar\",\n  \"suggest\",\n  \"suit\",\n  \"summer\",\n  \"sun\",\n  \"sunny\",\n  \"sunset\",\n  \"super\",\n  \"supply\",\n  \"supreme\",\n  \"sure\",\n  \"surface\",\n  \"surge\",\n  \"surprise\",\n  \"surround\",\n  \"survey\",\n  \"suspect\",\n  \"sustain\",\n  \"swallow\",\n  \"swamp\",\n  \"swap\",\n  \"swarm\",\n  \"swear\",\n  \"sweet\",\n  \"swift\",\n  \"swim\",\n  \"swing\",\n  \"switch\",\n  \"sword\",\n  \"symbol\",\n  \"symptom\",\n  \"syrup\",\n  \"system\",\n  \"table\",\n  \"tackle\",\n  \"tag\",\n  \"tail\",\n  \"talent\",\n  \"talk\",\n  \"tank\",\n  \"tape\",\n  \"target\",\n  \"task\",\n  \"taste\",\n  \"tattoo\",\n  \"taxi\",\n  \"teach\",\n  \"team\",\n  \"tell\",\n  \"ten\",\n  \"tenant\",\n  \"tennis\",\n  \"tent\",\n  \"term\",\n  \"test\",\n  \"text\",\n  \"thank\",\n  \"that\",\n  \"theme\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"they\",\n  \"thing\",\n  \"this\",\n  \"thought\",\n  \"three\",\n  \"thrive\",\n  \"throw\",\n  \"thumb\",\n  \"thunder\",\n  \"ticket\",\n  \"tide\",\n  \"tiger\",\n  \"tilt\",\n  \"timber\",\n  \"time\",\n  \"tiny\",\n  \"tip\",\n  \"tired\",\n  \"tissue\",\n  \"title\",\n  \"toast\",\n  \"tobacco\",\n  \"today\",\n  \"toddler\",\n  \"toe\",\n  \"together\",\n  \"toilet\",\n  \"token\",\n  \"tomato\",\n  \"tomorrow\",\n  \"tone\",\n  \"tongue\",\n  \"tonight\",\n  \"tool\",\n  \"tooth\",\n  \"top\",\n  \"topic\",\n  \"topple\",\n  \"torch\",\n  \"tornado\",\n  \"tortoise\",\n  \"toss\",\n  \"total\",\n  \"tourist\",\n  \"toward\",\n  \"tower\",\n  \"town\",\n  \"toy\",\n  \"track\",\n  \"trade\",\n  \"traffic\",\n  \"tragic\",\n  \"train\",\n  \"transfer\",\n  \"trap\",\n  \"trash\",\n  \"travel\",\n  \"tray\",\n  \"treat\",\n  \"tree\",\n  \"trend\",\n  \"trial\",\n  \"tribe\",\n  \"trick\",\n  \"trigger\",\n  \"trim\",\n  \"trip\",\n  \"trophy\",\n  \"trouble\",\n  \"truck\",\n  \"true\",\n  \"truly\",\n  \"trumpet\",\n  \"trust\",\n  \"truth\",\n  \"try\",\n  \"tube\",\n  \"tuition\",\n  \"tumble\",\n  \"tuna\",\n  \"tunnel\",\n  \"turkey\",\n  \"turn\",\n  \"turtle\",\n  \"twelve\",\n  \"twenty\",\n  \"twice\",\n  \"twin\",\n  \"twist\",\n  \"two\",\n  \"type\",\n  \"typical\",\n  \"ugly\",\n  \"umbrella\",\n  \"unable\",\n  \"unaware\",\n  \"uncle\",\n  \"uncover\",\n  \"under\",\n  \"undo\",\n  \"unfair\",\n  \"unfold\",\n  \"unhappy\",\n  \"uniform\",\n  \"unique\",\n  \"unit\",\n  \"universe\",\n  \"unknown\",\n  \"unlock\",\n  \"until\",\n  \"unusual\",\n  \"unveil\",\n  \"update\",\n  \"upgrade\",\n  \"uphold\",\n  \"upon\",\n  \"upper\",\n  \"upset\",\n  \"urban\",\n  \"urge\",\n  \"usage\",\n  \"use\",\n  \"used\",\n  \"useful\",\n  \"useless\",\n  \"usual\",\n  \"utility\",\n  \"vacant\",\n  \"vacuum\",\n  \"vague\",\n  \"valid\",\n  \"valley\",\n  \"valve\",\n  \"van\",\n  \"vanish\",\n  \"vapor\",\n  \"various\",\n  \"vast\",\n  \"vault\",\n  \"vehicle\",\n  \"velvet\",\n  \"vendor\",\n  \"venture\",\n  \"venue\",\n  \"verb\",\n  \"verify\",\n  \"version\",\n  \"very\",\n  \"vessel\",\n  \"veteran\",\n  \"viable\",\n  \"vibrant\",\n  \"vicious\",\n  \"victory\",\n  \"video\",\n  \"view\",\n  \"village\",\n  \"vintage\",\n  \"violin\",\n  \"virtual\",\n  \"virus\",\n  \"visa\",\n  \"visit\",\n  \"visual\",\n  \"vital\",\n  \"vivid\",\n  \"vocal\",\n  \"voice\",\n  \"void\",\n  \"volcano\",\n  \"volume\",\n  \"vote\",\n  \"voyage\",\n  \"wage\",\n  \"wagon\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"walnut\",\n  \"want\",\n  \"warfare\",\n  \"warm\",\n  \"warrior\",\n  \"wash\",\n  \"wasp\",\n  \"waste\",\n  \"water\",\n  \"wave\",\n  \"way\",\n  \"wealth\",\n  \"weapon\",\n  \"wear\",\n  \"weasel\",\n  \"weather\",\n  \"web\",\n  \"wedding\",\n  \"weekend\",\n  \"weird\",\n  \"welcome\",\n  \"west\",\n  \"wet\",\n  \"whale\",\n  \"what\",\n  \"wheat\",\n  \"wheel\",\n  \"when\",\n  \"where\",\n  \"whip\",\n  \"whisper\",\n  \"wide\",\n  \"width\",\n  \"wife\",\n  \"wild\",\n  \"will\",\n  \"win\",\n  \"window\",\n  \"wine\",\n  \"wing\",\n  \"wink\",\n  \"winner\",\n  \"winter\",\n  \"wire\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"witness\",\n  \"wolf\",\n  \"woman\",\n  \"wonder\",\n  \"wood\",\n  \"wool\",\n  \"word\",\n  \"work\",\n  \"world\",\n  \"worry\",\n  \"worth\",\n  \"wrap\",\n  \"wreck\",\n  \"wrestle\",\n  \"wrist\",\n  \"write\",\n  \"wrong\",\n  \"yard\",\n  \"year\",\n  \"yellow\",\n  \"you\",\n  \"young\",\n  \"youth\",\n  \"zebra\",\n  \"zero\",\n  \"zone\",\n  \"zoo\",\n];\n","import { MnemonicEN } from \"@bsvwasm/mnemonic\";\nimport { Hash } from \"@bsv/sdk\";\nimport randomBytes from \"randombytes\";\nimport { bip39words } from \"./bip39words.js\";\n\nfunction generateEntropy(bitLength) {\n  if (bitLength % 32 !== 0 || bitLength < 128 || bitLength > 256) {\n    throw new Error(\n      \"Invalid bit length. Valid options are: 128, 160, 192, 224, 256\"\n    );\n  }\n\n  return randomBytes(bitLength / 8);\n}\n\nfunction entropyToMnemonic(entropy) {\n  const entropyBits = bufferToBinaryString(entropy);\n  const checksum = Hash.sha_256(entropy).to_bytes();\n  // TODO: Test this change to not use crypto package\n  // const checksum = createHash(\"sha256\").update(entropy).digest();\n  const checksumBits = bufferToBinaryString(Buffer.from(checksum)).substring(\n    0,\n    (entropy.length * 8) / 32\n  );\n\n  const bits = entropyBits + checksumBits;\n  const mnemonicWords = [];\n\n  for (let i = 0; i < bits.length; i += 11) {\n    const index = parseInt(bits.slice(i, i + 11), 2);\n    mnemonicWords.push(bip39words[index]);\n  }\n\n  return new MnemonicEN(mnemonicWords.join(\" \"));\n}\n\nfunction generateMnemonic(bitLength) {\n  const entropy = generateEntropy(bitLength);\n  return entropyToMnemonic(entropy);\n}\n\nfunction bufferToBinaryString(buffer) {\n  return buffer\n    .toString(\"hex\")\n    .match(/.{2}/g)\n    .map((byte) => parseInt(byte, 16).toString(2).padStart(8, \"0\"))\n    .join(\"\");\n}\n\nexport { generateEntropy, generateMnemonic };\n","\"use strict\";\n\nimport bitcore from \"bitcore-lib\";\nvar _ = bitcore.deps._;\nvar PrivateKey = bitcore.PrivateKey;\nvar PublicKey = bitcore.PublicKey;\nvar Address = bitcore.Address;\nvar BufferWriter = bitcore.encoding.BufferWriter;\nvar ECDSA = bitcore.crypto.ECDSA;\nvar Signature = bitcore.crypto.Signature;\nvar sha256sha256 = bitcore.crypto.Hash.sha256sha256;\nvar JSUtil = bitcore.util.js;\nvar $ = bitcore.util.preconditions;\n\n/**\n * constructs a new message to sign and verify.\n *\n * @param {String} message\n * @param {String=} encoding - The message encoding (either 'utf8', 'base64', or 'hex')\n * @returns {Message}\n */\nvar Message = function Message(message, encoding = \"utf8\") {\n  if (!(this instanceof Message)) {\n    return new Message(message, encoding);\n  }\n  $.checkArgument(\n    _.isString(message),\n    \"First argument should be a string. You can specify the encoding as the second parameter\"\n  );\n  const validEncodings = [\n    \"ascii\",\n    \"utf8\",\n    \"utf16le\",\n    \"ucs2\",\n    \"base64\",\n    \"latin1\",\n    \"binary\",\n    \"hex\",\n  ];\n\n  $.checkArgument(\n    validEncodings.includes(encoding),\n    \"Second argument should be a valid BufferEncoding: 'utf8', 'hex', or 'base64', etc\"\n  );\n\n  this.message = message;\n  this.encoding = encoding;\n\n  return this;\n};\n\nMessage.MAGIC_BYTES = Buffer.from(\"Bitcoin Signed Message:\\n\");\n\nMessage.prototype.magicHash = function magicHash() {\n  var prefix1 = BufferWriter.varintBufNum(Message.MAGIC_BYTES.length);\n  var messageBuffer = Buffer.from(this.message, this.encoding);\n  var prefix2 = BufferWriter.varintBufNum(messageBuffer.length);\n  var buf = Buffer.concat([\n    prefix1,\n    Message.MAGIC_BYTES,\n    prefix2,\n    messageBuffer,\n  ]);\n  var hash = sha256sha256(buf);\n  return hash;\n};\n\nMessage.prototype._sign = function _sign(privateKey) {\n  $.checkArgument(\n    privateKey instanceof PrivateKey,\n    \"First argument should be an instance of PrivateKey\"\n  );\n  var hash = this.magicHash();\n  var ecdsa = new ECDSA();\n  ecdsa.hashbuf = hash;\n  ecdsa.privkey = privateKey;\n  ecdsa.pubkey = privateKey.toPublicKey();\n  ecdsa.signRandomK();\n  ecdsa.calci();\n  return ecdsa.sig;\n};\n\n/**\n * Will sign a message with a given bitcoin private key.\n *\n * @param {PrivateKey} privateKey - An instance of PrivateKey\n * @returns {String} A base64 encoded compact signature\n */\nMessage.prototype.sign = function sign(privateKey) {\n  let wif = privateKey.toWIF();\n  privateKey = PrivateKey.fromWIF(wif);\n  var signature = this._sign(privateKey);\n  return signature.toCompact().toString(\"base64\");\n};\n\nMessage.prototype._verify = function _verify(publicKey, signature) {\n  $.checkArgument(\n    publicKey instanceof PublicKey,\n    \"First argument should be an instance of PublicKey\"\n  );\n  $.checkArgument(\n    signature instanceof Signature,\n    \"Second argument should be an instance of Signature\"\n  );\n  var hash = this.magicHash();\n  var verified = ECDSA.verify(hash, signature, publicKey);\n  if (!verified) {\n    this.error = \"The signature was invalid\";\n  }\n  return verified;\n};\n\n/**\n * Will return a boolean of the signature is valid for a given bitcoin address.\n * If it isn't the specific reason is accessible via the \"error\" member.\n *\n * @param {Address|String} bitcoinAddress - A bitcoin address\n * @param {String} signatureString - A base64 encoded compact signature\n * @returns {Boolean}\n */\nMessage.prototype.verify = function verify(bitcoinAddress, signatureString) {\n  $.checkArgument(bitcoinAddress);\n  $.checkArgument(signatureString && _.isString(signatureString));\n\n  if (_.isString(bitcoinAddress)) {\n    bitcoinAddress = Address.fromString(bitcoinAddress);\n  }\n  var signature = Signature.fromCompact(Buffer.from(signatureString, \"base64\"));\n\n  // recover the public key\n  var ecdsa = new ECDSA();\n  ecdsa.hashbuf = this.magicHash();\n  ecdsa.sig = signature;\n  var publicKey = ecdsa.toPublicKey();\n\n  var signatureAddress = Address.fromPublicKey(\n    publicKey,\n    bitcoinAddress.network\n  );\n\n  // check that the recovered address and specified address match\n  if (bitcoinAddress.toString() !== signatureAddress.toString()) {\n    this.error = \"The signature did not match the message digest\";\n    return false;\n  }\n\n  return this._verify(publicKey, signature);\n};\n\n/**\n * Instantiate a message from a message string\n *\n * @param {String} str - A string of the message\n * @returns {Message} A new instance of a Message\n */\nMessage.fromString = function (str) {\n  return new Message(str);\n};\n\n/**\n * Instantiate a message from JSON\n *\n * @param {String} json - An JSON string or Object with keys: message\n * @returns {Message} A new instance of a Message\n */\nMessage.fromJSON = function fromJSON(json) {\n  if (JSUtil.isValidJSON(json)) {\n    json = JSON.parse(json);\n  }\n  return new Message(json.message);\n};\n\n/**\n * @returns {Object} A plain object with the message information\n */\nMessage.prototype.toObject = function toObject() {\n  return {\n    message: this.message,\n    encoding: this.encoding,\n  };\n};\n\n/**\n * @returns {String} A JSON representation of the message information\n */\nMessage.prototype.toJSON = function toJSON() {\n  return JSON.stringify(this.toObject());\n};\n\n/**\n * Will return a the string representation of the message\n *\n * @returns {String} Message\n */\nMessage.prototype.toString = function () {\n  return this.message;\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {String} Message\n */\nMessage.prototype.inspect = function () {\n  return \"<Message: \" + this.toString() + \">\";\n};\n\nexport default Message;\n","import bitcore from \"bitcore-lib\";\nimport { encrypt as enc } from \"../crypt.js\";\nimport { generateMnemonic } from \"../utils/mnemonic.js\";\nimport Message from \"./bitcore-message.js\";\n\ndelete global._bitcore;\n\nexport const sign = (message, key, encoding) => {\n  const privateKey = bitcore.PrivateKey.fromWIF(key.priv);\n  const msg = Message(message, encoding);\n  return {\n    address: key.address,\n    message: message,\n    sig: msg.sign(privateKey),\n    ts: Date.now(),\n  };\n};\n\nexport const encrypt = (message, key) => {\n  const privateKey = bitcore.PrivateKey.fromWIF(key.priv).toBuffer();\n  const data = enc(message, null, privateKey);\n  return {\n    address: key.address,\n    data,\n    ts: Date.now(),\n  };\n};\n\nexport const create = async (seed, account, o) => {\n  /********************************************************************\n   * The derivation path follows the\n   * BIP44 standard with a twist:\n   *\n   * - A new account is created per web host\n   * - It uses a new branch of \"2\" instead of (0 or 1)\n   *\n   * This way there is no overlap with existing BIP44 wallets but\n   * the wallet scheme can seamlessly integrate with them.\n   *\n   ********************************************************************/\n  const StarfishBranch = 2;\n  const path = `m/44'/0'/${account}'/${StarfishBranch}/0`;\n  const derived = seed.key.deriveChild(path);\n  const address = derived.privateKey.toAddress().toString();\n  const keys = {\n    path,\n    pub: derived.publicKey.toString(),\n    address,\n    host: o.host,\n  };\n\n  return keys;\n};\n\nexport const seed = (hex, passphrase) => {\n  let buf;\n  if (!hex) {\n    if (!passphrase) {\n      throw new Error(\"passphrase required creting initial seed\");\n    }\n    // if no providing a hex, derive a seed from passphrase\n    let mnem = generateMnemonic(128)\n    mnem.setPassphrase(passphrase)\n    buf = Buffer.from(mnem.toBytes())\n  } else {\n    buf = Buffer.from(hex, \"hex\");\n  }\n\n  try {\n    let key = bitcore.HDPrivateKey.fromSeed(buf);\n    return {\n      hex: buf.toString(\"hex\"),\n      key: key,\n    };\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const derive = (seed, path) => {\n  return seed.key.deriveChild(path);\n};\n\nexport const verify = (message, address, sig, encoding) => {\n  return Message(message, encoding).verify(address, sig);\n};\n","import { MnemonicEN } from \"@bsvwasm/mnemonic\";\nimport { BAP } from \"bsv-bap\";\nimport bodyParser from \"body-parser\";\nimport { HD, Mnemonic } from \"@bsv/sdk\";\nimport timeout from \"connect-timeout\";\nimport cors from \"cors\";\nimport { randomUUID } from \"node:crypto\";\nimport express from \"express\";\nimport fs from \"node:fs\";\nimport Datastore from \"nedb\";\nimport path, { dirname } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport Key from \"./key.js\";\nimport Seed from \"./seed.js\";\nimport State from \"./state.js\";\nimport * as Wallet from \"./wallet/index.js\";\nimport { Utils } from \"@bsv/sdk\";\n\nconst { toArray } = Utils;\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconst app = express();\nconst TIMEOUT = 20;\nconst defaultPort = 21000;\nconst defaultExpireTime = \"once\";\n\nconst allowedOrigins = [\n  `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n    process.env.TOKENPASS_PORT || \"21000\"\n  }`,\n];\nconst whitelist = process.env.TOKENPASS_ORIGIN_WHITELIST;\nif (whitelist) {\n  allowedOrigins.push(...whitelist.split(\",\"));\n}\n\nconst hostFromOrigin = (headers) => {\n  return headers.origin ? new URL(headers.origin).host : null; // \"localhost\";\n};\n\nconst expireSelectionToTime = (expireSelection) => {\n  switch (expireSelection) {\n    case \"forever\":\n      return 0;\n    case \"once\":\n      return 10000;\n    case \"1h\":\n      return 3600000;\n    case \"1d\":\n      return 86400000;\n    case \"1w\":\n      return 604800000;\n    case \"1m\":\n      return 2592000000;\n    default:\n      return defaultExpireTime;\n  }\n};\n\nconst init = (config) => {\n  const dbpath = config.db;\n  if (!fs.existsSync(dbpath)) fs.mkdirSync(dbpath, { recursive: true });\n  const seed = new Seed({ db: dbpath, wallet: Wallet, Datastore: Datastore });\n  const K = new Key({ db: dbpath, wallet: Wallet, Datastore: Datastore });\n  const S = new State({ db: dbpath, Datastore: Datastore });\n  app.set(\"views\", path.join(__dirname, \"views\"));\n  app.set(\"view engine\", \"ejs\");\n  app.use(timeout(\"\" + TIMEOUT + \"s\"));\n  app.use(bodyParser.json({ limit: \"50mb\" }));\n  app.use(bodyParser.raw({ type: \"application/octet-stream\", limit: \"50mb\" }));\n  app.use(bodyParser.urlencoded({ limit: \"50mb\", extended: true }));\n  app.use(express.static(path.join(__dirname, \"public\")));\n  app.options(\"*\", cors());\n  app.use(express.urlencoded({ extended: false }));\n\n  // Sign a message\n  app.post(\"/sign\", cors(), async (req, res) => {\n    // when a tokenpass wallet connects the referrer is empty\n    console.log(\"SIGN ATTEMPTED FROM\", req.headers.origin, {\n      message: req.body.message,\n      authToken: req.headers.authorization,\n    });\n    let message = req.body.message;\n    let encoding = req.body.encoding || \"utf8\";\n\n    if (K.getSeed()) {\n      // Check for an access token\n      const accessToken = req.headers.authorization;\n      if ((accessToken === undefined) | (accessToken === null)) {\n        res.status(401).json({\n          error: \"Please provide an access token in the Authorization header.\",\n          code: 2,\n          success: false,\n          errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n            process.env.TOKENPASS_PORT || \"21000\"\n          }/auth`,\n        });\n        return;\n      }\n\n      // Check that the access token is valid\n      const state = await S.findOne({ accessToken });\n\n      if (!state?.accessToken || state.accessToken !== accessToken) {\n        res.status(401).json({\n          error: \"Invalid access token.\",\n          errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n            process.env.TOKENPASS_PORT || \"21000\"\n          }/auth`,\n          code: 3,\n          success: false,\n        });\n        return;\n      }\n\n      let host = accessToken ? state.host : hostFromOrigin(req.headers);\n      // use host associated with the access token if provided\n      if (!host) {\n        // no host means its youself on localhost\n        host = process.env.TOKENPASS_HOST || \"localhost\";\n        console.log(\"no origin, using\", host);\n      }\n\n      const expired = state.expireTime && state.expireTime < Date.now();\n\n      console.log(\"SIGN:\", {\n        expireTime: state.expireTime,\n        now: Date.now(),\n        host,\n      });\n\n      // Check that the access token is not expired\n      if (expired) {\n        res.status(401).json({\n          error: \"Access token has expired.\",\n          errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n            process.env.TOKENPASS_PORT || \"21000\"\n          }/auth`,\n          code: 5,\n        });\n        return;\n      }\n\n      let key = await K.findOrCreate({ host: host });\n      if (key) {\n        let signedResponse = await K.sign({\n          message: message,\n          key: key,\n          encoding: encoding,\n          ts: Date.now(),\n        });\n\n        // Rotate the access token\n        // const newAccessToken = randomUUID();\n        // await S.update({\n        //   host,\n        //   accessToken: newAccessToken,\n        // });\n\n        // signedResponse.accessToken = newAccessToken;\n\n        res.status(200).json(signedResponse);\n        return;\n      } else {\n        res\n          .status(417)\n          .json({ error: \"please create a wallet.\", success: false });\n        return;\n      }\n    } else {\n      res.status(401).json({\n        errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n          process.env.TOKENPASS_PORT || \"21000\"\n        }/auth`,\n        error: \"Check that TokenPass is running and you're signed in.\",\n        code: 1,\n      });\n    }\n  });\n\n  app.post(\"/encrypt\", cors(), async (req, res) => {\n    let message = req.body.message;\n\n    if (K.getSeed()) {\n      // Check for an access token\n      const accessToken = req.headers.authorization;\n      if ((accessToken === undefined) | (accessToken === null)) {\n        res.status(401).json({\n          error: \"Please provide an access token in the Authorization header.\",\n          code: 2,\n          success: false,\n          errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n            process.env.TOKENPASS_PORT || \"21000\"\n          }/auth`,\n        });\n        return;\n      }\n\n      const host = hostFromOrigin(req.headers);\n\n      // TODO:Check that the access token is valid\n      const state = await S.findOne({ accessToken });\n      if (!state) {\n        res.status(401).json({\n          error: \"Invalid access token.\",\n          errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n            process.env.TOKENPASS_PORT || \"21000\"\n          }/auth`,\n          code: 3,\n          success: false,\n        });\n        return;\n      }\n\n      const key = await K.findOrCreate({ host: state.host });\n      if (!key) {\n        res.status(417).json({ error: \"please create a wallet.\" });\n        return;\n      }\n\n      const { address, data, sig, ts } = K.encrypt({ message, key });\n      console.log({ address, data, sig, ts });\n      res.status(200).json({ data, address, sig, ts });\n    } else {\n      res.status(401).json({\n        errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n          process.env.TOKENPASS_PORT || \"21000\"\n        }/auth`,\n        error: \"Check that TokenPass is running and you're signed in.\",\n        code: 1,\n      });\n    }\n  });\n\n  // First time seed creation\n  app.post(\"/register\", async (req, res) => {\n    let s = await seed.create(req.body.password);\n\n    // create a BAP ID from this seed\n    // code.toString(); // words...\n    // var xpriv = code.toHDPrivateKey(passphrase);\n    //    const pk = ExtendedPrivateKey.from_seed(Buffer.from(s.hex, \"hex\"));\n\n    // console.log({ xpriv: xpriv.xprivkey });\n    // // get cooresponding extended private key\n    // const hdPrivateKey = ExtendedPrivateKey.from_string(xpriv.xprivkey);\n\n    const pk = HD.fromSeed(toArray(s.hex, \"hex\"));\n    const bap = new BAP(pk.toString());\n    const newId = bap.newId();\n\n    K.setSeed(s);\n\n    // create first state for localhost with an icon\n    const state = await S.findOrCreate({\n      host: process.env.TOKENPASS_HOST || \"localhost\",\n    });\n\n    if (!state.icon) {\n      state.icon = \"/auth/icon\";\n    }\n    await S.update(state);\n\n    const globalState = await S.findOrCreate({\n      host: \"global\",\n    });\n    // console.log({ newId });\n\n    newId.setAttribute(\"displayName\", req.body.displayName);\n    newId.setAttribute(\"paymail\", req.body.paymail);\n    newId.setAttribute(\"logo\", req.body.logo); // TODO: bap calls it logo, tokenpass calls it icon\n\n    // TODO: Create on-chain record for this identity\n\n    globalState = {\n      ...globalState,\n      //...newId.identityAttributes, // these are {value: \"\" , none: 123} but i only want the value\n      // ...newId.identityAttributes,// this is an object, I want to spread it\n      ...Object.keys(newId.identityAttributes).reduce((acc, key) => {\n        acc[key] = newId.identityAttributes[key].value;\n        return acc;\n      }, {}),\n      bapID: newId.identityKey,\n    };\n    await S.update(globalState);\n\n    res.json({});\n  });\n\n  // Import seed\n  // TODO: Remove cors here\n  app.post(\"/import\", cors(), async (req, res) => {\n    try {\n      const mnemonic = new MnemonicEN(req.body.mnemonic);\n      let s = await seed.importKey(mnemonic.toHex(), req.body.password);\n      K.setSeed(s);\n      res.json({});\n    } catch (e) {\n      res.json({ error: \"invalid seed\", success: false });\n    }\n  });\n\n  // Export seed\n  app.post(\"/export\", async (req, res) => {\n    // return the mnemonic\n    try {\n      const hex = await seed.exportKey(req.body.password);\n\n      const pk = HD.fromSeed(Buffer.from(hex, \"hex\"));\n      const bap = new BAP(pk.toString());\n      // const bapId = bap.getId();\n      // console.log({ bapId });\n      const mnemonic = Mnemonic.fromSeed(\n        Buffer.from(hex, \"hex\"),\n        Mnemonic.Words.ENGLISH\n      );\n      if (mnemonic) {\n        res.json({ seed: hex, mnemonic: mnemonic.phrase });\n      } else {\n        res.status(401).json({\n          error: \"invalid\",\n          success: false,\n          errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n            process.env.TOKENPASS_PORT || \"21000\"\n          }/auth`,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      res.status(500).json({\n        error: \"unknown error\",\n        success: false,\n      });\n    }\n  });\n\n  // Update state object\n  app.post(\"/state\", cors(), async (req, res) => {\n    let referer = req.headers.origin;\n    let host = new URL(referer).host;\n\n    const s = await S.findOne({ host });\n    if (s) {\n      if (req.query.mode === \"clear\") {\n        await S.delete({ host });\n        await S.update({ ...req.body, host });\n      } else {\n        S.update({ ...req.body, host });\n      }\n    } else {\n      S.insert({ ...req.body, host });\n    }\n\n    res.json({ success: true });\n  });\n\n  // Update profile object\n  app.post(\"/profile\", cors(), async (req, res) => {\n    if (K.getSeed()) {\n      let host = \"global\";\n      try {\n        const s = await S.findOne({ host });\n        let finalState = { ...req.body, host };\n        if (s) {\n          if (req.query.mode === \"clear\") {\n            await S.delete({ host });\n          }\n          S.update(finalState);\n        } else {\n          S.insert(finalState);\n        }\n        res.json({ success: true });\n      } catch (error) {\n        console.error(error);\n        res.status(500).json({ success: false, error: error.toString() });\n      }\n    } else {\n      res.status(401).json({\n        error:\n          \"please check that TokenPass is running and you're signed in. check TokenPass dashboard at http://localhost:21000\",\n        code: 1,\n        errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n          process.env.TOKENPASS_PORT || \"21000\"\n        }`,\n      });\n    }\n  });\n\n  // Update state object\n  app.delete(\"/state\", cors(), async (req, res) => {\n    let referer = req.headers.origin;\n    let host = new URL(referer).host;\n\n    S.delete({ ...req.body, host });\n\n    res.json({ success: true });\n  });\n\n  // Get the global profile\n  app.get(\"/profile\", cors(), async (req, res) => {\n    let state = await S.findOne({ host: \"global\" });\n    res.json(state);\n  });\n\n  // Get the state object\n  app.get(\"/state\", cors(), async (req, res) => {\n    let referer = req.headers.origin;\n    let host = new URL(referer).host;\n\n    let state = await S.findOne({ host });\n\n    res.json(state);\n  });\n\n  // Decrypt wallet with password at startup\n  app.post(\"/login\", async (req, res) => {\n    try {\n      let s = await seed.get(req.body.password);\n      if (s) {\n        K.setSeed(s);\n\n        // We do not give an access token here.\n        // Those are per hose, this is global\n        res.json({ success: true });\n      } else {\n        res.json({ error: \"invalid\", success: false });\n      }\n    } catch (e) {}\n  });\n\n  // Clear seed so the server stops signing requests\n  app.post(\"/logout\", cors(), (req, res) => {\n    K.setSeed(null);\n    res.json({ success: true });\n  });\n\n  // Ask a connected wallet to fund a raw tx\n  app.post(\"/fund\", cors(), async (req, res) => {\n    const key = K.getSeed();\n    if (key) {\n      const url = `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n        process.env.TOKENPASS_PORT || \"21000\"\n      }/fund`;\n      let referer = req.headers.origin;\n      let host = referer ? new URL(referer).host : \"localhost\";\n\n      // make sure we have permission to fund for this host\n      const state = await S.findOne({ host });\n      if (!state.scopes?.includes(\"fund\")) {\n        res.status(403).json({\n          error: \"Insufficient permission\",\n          code: 7,\n        });\n        return;\n      }\n\n      const authToken = state.accessToken;\n      let rawtx = req.body.rawtx;\n      try {\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            rawtx,\n            broadcast: true,\n            sigma: true,\n            host,\n            authToken,\n          }),\n        });\n\n        const json = await response.json();\n        res.json(json);\n      } catch (e) {\n        console.error(e);\n        res.status(500).json({ success: false, error: e.toString() });\n      }\n    } else {\n      res.status(401).json({\n        error:\n          \"please check that TokenPass is running and you're signed in. check TokenPass dashboard at http://localhost:21000\",\n        code: 1,\n        errorURL: `http://${process.env.TOKENPASS_HOST || \"localhost\"}:${\n          process.env.TOKENPASS_PORT || \"21000\"\n        }/auth`,\n      });\n    }\n  });\n\n  // alias to vivi.railway.internal\n  // Create an auth token for some amount of time\n  app.post(\"/auth\", cors(), async (req, res) => {\n    console.log(\"AUTH ATTEMPTED FROM\", req.headers.origin, {\n      host: req.body.host,\n    });\n    const pw = req.body.password;\n    try {\n      let s = await seed.get(pw);\n      if (s) {\n        K.setSeed(s);\n\n        // ! Forbid auth from any not allowed origin\n        // undefined is same network\n        if (\n          req.headers.origin &&\n          !allowedOrigins.includes(req.headers.origin)\n        ) {\n          res.status(403).json({\n            error: \"The origin is not authorized\",\n            code: 6,\n          });\n          return;\n        }\n\n        // Auth gets the host from the request body\n        const host = req.body.host;\n        console.log({ hosts: host, origin: req.headers.origin });\n\n        const expireSelection = req.body.expire;\n        const expireTime = expireSelectionToTime(expireSelection);\n\n        const accessToken = randomUUID();\n        const scopes = req.body.scopes?.split(\",\") || [];\n        const newState = {\n          host,\n          accessToken,\n          scopes,\n          icon: req.body.icon,\n          expireTime: Date.now() + expireTime,\n        };\n        await S.update(newState);\n        res.json({ success: true, accessToken, expireTime, host });\n      } else {\n        res.json({ error: \"invalid\", success: false });\n      }\n    } catch (e) {\n      res.status(500).json({ success: false, error: e.toString() });\n    }\n  });\n\n  // Ask wallet to prove ownership of a txid\n  app.get(\"/prove\", async (req, res) => {\n    let referer = req.headers.origin;\n    let host = new URL(referer).host;\n    let txid = req.query.txid;\n    let challengeStr = req.query.message;\n\n    // TODO: Find this txid in utxo store\n    let key = await Wallet.keyForTx(txid);\n    if (!key) {\n      res.status(404).json({\n        error: \"txid not found\",\n        code: 4,\n      });\n      return;\n    }\n    const { address, message, sig, ts } = Wallet.sign(challengeStr, key);\n    return res.json({ message, key, address, sig, ts });\n  });\n\n  // OAuth style login page for apps\n  app.get(\"/auth\", async (req, res) => {\n    const returnHost = new URL(req.query.returnURL).host;\n\n    // if host is undefined its localhost\n    const originHost = hostFromOrigin(req.headers);\n    const host = originHost || process.env.TOKENPASS_HOST || \"localhost\";\n\n    if (originHost && host !== returnHost) {\n      res.status(403).json({\n        error: \"The origin is not authorized \" + host + \" \" + returnHost,\n        code: 6,\n      });\n      return;\n    }\n\n    const returnURL = req.query.returnURL;\n    const icon = req.query.icon;\n    const scopes = req.query.scopes?.split(\",\") || [];\n\n    console.log(\"AUTH GET:\", {\n      returnURL,\n      icon,\n    });\n    res.render(\"auth\", {\n      returnURL,\n      icon,\n      scopes,\n      host: host || \"lostlhost\",\n    });\n  });\n\n  // Icon intended to be rendered in the auth page only\n  app.get(\"/auth/icon\", cors(), async (req, res) => {\n    // ! Forbid auth from any not allowed origin\n    // undefined is same network\n    if (req.headers.origin && !allowedOrigins.includes(req.headers.origin)) {\n      res.status(403).json({\n        error: \"The origin is not authorized\",\n        code: 6,\n      });\n      return;\n    }\n\n    // ! Forbid auth from any outside host\n    // if (\n    //   req.headers.host !==\n    //   `${process.env.TOKENPASS_HOST || \"localhost\"}:${\n    //     process.env.TOKENPASS_PORT || \"21000\"\n    //   }`\n    // ) {\n    //   res.status(403).json({\n    //     error: \"The origin is not authorized\" + req.headers.origin,\n    //     code: 6,\n    //   });\n    //   return;\n    // }\n\n    // workaround to import not working in esm\n    const minidenticon = async (str) => {\n      const module = await import(\"minidenticons\");\n      return module.minidenticon(str);\n    };\n\n    res.set(\"Content-Type\", \"image/svg+xml\");\n    res.set(\"Cache-Control\", \"max-age=31536000\");\n\n    // derive a icon from localhost key\n    if (K.getSeed()) {\n      let k = await K.findOrCreate({\n        host: \"localhost\",\n      });\n      res.send(await minidenticon(k.pub));\n    } else {\n      // default icon\n      res.send(await minidenticon(\"Anon\"));\n    }\n  });\n\n  // Dashboard web page\n  app.get(\"/\", async (req, res) => {\n    if (K.getSeed()) {\n      // if host is specified\n      let keys = (await K.all()) || [];\n      let states = (await S.all()) || [];\n      console.log(states);\n      res.render(\"home\", { keys, states, seed: true });\n    } else {\n      let seedCount = await seed.count();\n      if (seedCount) {\n        const host = hostFromOrigin(req.headers);\n        res.render(\"login\", { host });\n      } else {\n        res.render(\"home\", { seed: false });\n      }\n    }\n  });\n\n  app.listen(process.env.TOKENPASS_PORT || defaultPort, () => {\n    console.log(\n      `TokenPass listening at http://${\n        process.env.TOKENPASS_HOST || \"localhost\"\n      }:${process.env.TOKENPASS_PORT || \"21000\"}`\n    );\n  });\n};\nexport { init };\n"],"names":["Key","constructor","config","this","db","Datastore","filename","autoload","wallet","setSeed","s","seed","getSeed","sign","o","message","key","encoding","encrypt","findOrCreate","findOne","count","console","log","create","insert","Promise","resolve","reject","err","transform","find","keys","map","k","doc","derived","derive","path","priv","privateKey","toString","pub","publicKey","address","toAddress","all","text","keystr","keyBuffer","iv","crypto","randomBytes","createHash","update","digest","cipher","createCipheriv","encrypted","Buffer","concat","final","encryptedData","Seed","get","password","r","decrypted","from","encryptedText","decipher","createDecipheriv","decrypt","hex","e","importKey","res","exportKey","undefined","State","setState","state","getState","host","_id","states","delete","remove","$set","upsert","returnUpdatedDocs","numReplaced","accessToken","buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","length","alloc","allocUnsafe","allocUnsafeSlow","module","exports","prototype","Object","TypeError","size","fill","buf","SlowBuffer","MAX_BYTES","require$$0","global","msCrypto","getRandomValues","cb","RangeError","bytes","generated","slice","process","nextTick","Error","bip39words","bufferToBinaryString","match","byte","parseInt","padStart","join","_","bitcore","deps","PrivateKey","PublicKey","Address","BufferWriter","ECDSA","Signature","sha256sha256","Hash","JSUtil","util","js","$","preconditions","Message","checkArgument","isString","includes","MAGIC_BYTES","magicHash","prefix1","varintBufNum","messageBuffer","prefix2","_sign","hash","ecdsa","hashbuf","privkey","pubkey","toPublicKey","signRandomK","calci","sig","wif","toWIF","fromWIF","toCompact","_verify","signature","verified","verify","error","bitcoinAddress","signatureString","fromString","fromCompact","signatureAddress","fromPublicKey","network","str","fromJSON","json","isValidJSON","JSON","parse","toObject","toJSON","stringify","inspect","_bitcore","msg","ts","Date","now","data","enc","toBuffer","async","account","deriveChild","passphrase","mnem","entropy","entropyBits","checksum","sha_256","to_bytes","bits","substring","mnemonicWords","i","index","push","MnemonicEN","entropyToMnemonic","bitLength","setPassphrase","toBytes","HDPrivateKey","fromSeed","toArray","Utils","__dirname","dirname","fileURLToPath","url","app","express","allowedOrigins","env","TOKENPASS_HOST","TOKENPASS_PORT","whitelist","TOKENPASS_ORIGIN_WHITELIST","split","hostFromOrigin","headers","origin","URL","init","dbpath","fs","existsSync","mkdirSync","recursive","Wallet","K","S","set","use","timeout","bodyParser","limit","raw","type","urlencoded","extended","static","options","cors","post","req","body","authToken","authorization","status","code","success","errorURL","expired","expireTime","signedResponse","pk","HD","newId","BAP","icon","globalState","setAttribute","displayName","paymail","logo","_extends","identityAttributes","reduce","acc","value","bapID","identityKey","mnemonic","toHex","Mnemonic","Words","ENGLISH","phrase","query","mode","finalState","_state$scopes","referer","scopes","rawtx","response","fetch","method","broadcast","sigma","pw","_req$body$scopes","hosts","expireSelection","expireSelectionToTime","expire","randomUUID","newState","txid","challengeStr","_req$query$scopes","returnHost","returnURL","originHost","render","minidenticon","import","send","listen"],"mappings":"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ACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,OCv9DF,SAASC,EAAqBlC,GAC5B,OAAOA,EACJpD,SAAS,OACTuF,MAAM,SACN/F,IAAKgG,GAASC,SAASD,EAAM,IAAIxF,SAAS,GAAG0F,SAAS,EAAG,MACzDC,KAAK,GACV,CC5CA,IAAIC,EAAIC,EAAQC,KAAKF,EACjBG,EAAaF,EAAQE,WACrBC,EAAYH,EAAQG,UACpBC,EAAUJ,EAAQI,QAClBC,EAAeL,EAAQrH,SAAS0H,aAChCC,EAAQN,EAAQnF,OAAOyF,MACvBC,EAAYP,EAAQnF,OAAO0F,UAC3BC,EAAeR,EAAQnF,OAAO4F,KAAKD,aACnCE,EAASV,EAAQW,KAAKC,GACtBC,EAAIb,EAAQW,KAAKG,cASjBC,EAAU,SAASA,EAAQtI,EAASE,EAAW,QACjD,OAAMd,gBAAgBkJ,GAGtBF,EAAEG,cACAjB,EAAEkB,SAASxI,GACX,2FAaFoI,EAAEG,cAXqB,CACrB,QACA,OACA,UACA,OACA,SACA,SACA,SACA,OAIeE,SAASvI,GACxB,qFAGFd,KAAKY,QAAUA,EACfZ,KAAKc,SAAWA,EAGlBd,UA1BekJ,EAAQtI,EAASE,EA0BhC,EAEAoI,EAAQI,YAAc9F,OAAOS,KAAK,6BAElCiF,EAAQ3C,UAAUgD,UAAY,WAC5B,IAAIC,EAAUhB,EAAaiB,aAAaP,EAAQI,YAAYrD,QACxDyD,EAAgBlG,OAA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"}