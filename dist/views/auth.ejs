<html>
  <head>
    <link href="/daisy.4.4.2.full.min.css" rel="stylesheet" type="text/css" />
    <script src="/tailwind_3.3.5.js"></script>
    <link rel="stylesheet" href="/style.css" />
    <link href="/swal.css" rel="stylesheet" />
    <script src="/swal.min.js"></script>
    <script>
      const swal = Swal.mixin({
        buttonsStyling: false,
        confirmButtonText: "Allow",
        customClass: { confirmButton: "w-full bg-gray-600 rounded" },
      });
      const modal = async () => {
        let { value: formValues } = await swal.fire({
          allowEnterKey: true,
          imageUrl: "<%= locals.icon %>",
          imageHeight: 150,
          imageAlt: "<%= locals.host %>",
          title: `Authorize Host: <%= locals.host %>`,
          html: `<% if (locals.host) { %>
      <% } %>
      <input type='password' placeholder='Enter your password' id='password'>
      <div class="flex items-center mt-2 h-7 text-sm text-slate-800 font-mono bg-slate-200 rounded-sm"><img src="http://localhost:21000/auth/icon" alt="Security Image" class="border w-6 h-6 ml-1 mr-2 bg-white rounded-full"></img>Make Sure You Recognize This Security Image</div>
      <hr class="my-4" />
      <div class="p-2 text-lg">
        <clas class="text-slate-600">This host would like access to:</div>
        <ul class="p-2 rounded-sm text-sm bg-[#f2f2f2] font-mono w-full">
          <% if (locals.scopes.length > 0) { %>
            <% scopes.forEach((scope) => { %>
              <li><%= scope %></li>
            <% }) %>
          <% } else { %>
            <li>Authentication only</li>
          <% } %>
        </ul>
      </div>
      <div class="p-2">
        <label class='timeframe' for='once'>Ask Every Time
          <input type='radio' name='expire' id='once'>
        </label>
        <label class='timeframe' for='1h'>Allow for 1 Hour
          <input type='radio' name='expire' id='1h'>
        </label>
        <label class='timeframe' for='1d'>Allow for 1 Day
          <input type='radio' name='expire' id='1d'>
        </label>
        <label class='timeframe' for='1m'>Allow for 1 Month
          <input type='radio' name='expire' id='1m'>
        </label>
        <label class='timeframe' for='forever'>Allow Forever
          <input type='radio' name='expire' id='forever'>
        </label>
      </div>`,
          preConfirm: () => {
            return [
              document.querySelector("#password").value,
              document.querySelector("input[name='expire']:checked").id,
            ];
          },
          focusConfirm: true,
          didOpen: () => {
            document.querySelector("#password").focus();
          },
        });
        if (formValues && formValues[0]) {
          const scopes = '<%= locals.scopes.join(",") %>';
          debugger;
          fetch(`/auth`, {
            method: "post",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              password: formValues[0],
              expire: document.querySelector("input[name='expire']:checked").id,
              host: "<%= locals.host %>",
              icon: "<%= locals.icon %>",
              scopes,
            }),
          })
            .then((res) => {
              return res.json();
            })
            .then((data) => {
              const { error, accessToken, success } = data;
              if (error) {
                alert("Failed to authenticate " + error);
                modal();
              } else if (success) {
                if (window.opener) {
                  // If this window has an opener, it's a popup
                  window.close(); // Close the window
                } else {
                  const returnURL = new URL(location.href).searchParams.get(
                    "returnURL"
                  );
                  if (accessToken) {
                    location.href = `${returnURL}?tokenPass=${accessToken}`;
                  }
                }
              }
            });
        } else {
          modal();
        }
      };
      document.addEventListener("DOMContentLoaded", (e) => {
        modal();
      });
    </script>
  </head>
  <body>
    <nav>
      <img class="mr-2 w-7" src="http://localhost:21000/auth/icon" />
      <h1>TokenPass</h1>
    </nav>
  </body>
</html>
